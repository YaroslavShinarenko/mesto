(()=>{"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e,n,r,o){var i=o.handleCardClick,a=o.handleLikeClick,c=o.handleDeleteIconClick;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=e.name,this._link=e.link,this._id=e._id,this._ownerId=e.owner._id,this._currentUserId=r,this._cardSelector=n,this._handleCardClick=i,this._handleLikeClick=a,this._handleDeleteIconClick=c,this._likeCounter=e.likes.length,this._likes=e.likes}var n,r;return n=t,(r=[{key:"addLike",value:function(){this.likeButton.classList.add("place__like-button_active"),this.likeIsActive=!0,this._likeCounter++,this.likeButton.textContent=this._likeCounter}},{key:"deleteLike",value:function(){this.likeButton.classList.remove("place__like-button_active"),this.likeIsActive=!1,this._likeCounter--,this.likeButton.textContent=this._likeCounter}},{key:"_removeCard",value:function(){this._element.remove()}},{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".place").cloneNode(!0)}},{key:"_setEventListeners",value:function(){var e=this;this.likeButton=this._element.querySelector(".place__like-button"),this._deleteButton=this._element.querySelector(".place__delete-button"),this._photo=this._element.querySelector(".place__photo"),this._photo.addEventListener("click",(function(){e._handleCardClick(e._name,e._link)})),this.likeButton.addEventListener("click",(function(){e._handleLikeClick(e._id,e.likeIsActive)})),this._deleteButton.addEventListener("click",(function(){e._handleDeleteIconClick(e._element,e._id)}))}},{key:"generateCard",value:function(){var e=this;this._element=this._getTemplate(),this._setEventListeners();var t=this._element.querySelector(".place__name"),n=this._photo;return this._element.id=this._id,t.textContent=this._name,t.alt=this._name,n.src=this._link,this.likeButton.textContent=this._likeCounter,this.likeIsActive=this._likes.some((function(t){if(e._currentUserId===t._id)return!0})),this.likeIsActive&&this.likeButton.classList.add("place__like-button_active"),this._ownerId===this._currentUserId&&this._deleteButton.classList.add("place__delete-button_visible"),this._element}}])&&e(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var o=function(){function e(t,n){var o=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),r(this,"_showInputError",(function(e,t){var n=o._form.querySelector(".".concat(e.id,"-error"));e.classList.add(o._settings.inputErrorClass),n.textContent=t,n.classList.add(o._settings.errorClass)})),r(this,"_hideInputError",(function(e){var t=o._form.querySelector(".".concat(e.id,"-error"));e.classList.remove(o._settings.inputErrorClass),t.classList.remove(o._settings.errorClass),t.textContent=""})),r(this,"_checkInputValidity",(function(e){e.validity.valid?o._hideInputError(e):o._showInputError(e,e.validationMessage)})),r(this,"_hasInvalidInput",(function(){return o._inputList.some((function(e){return!e.validity.valid}))})),r(this,"_toggleButtonState",(function(){o._hasInvalidInput(o._inputList)?(o._buttonElement.classList.add(o._settings.inactiveButtonClass),o._buttonElement.setAttribute("disabled",!0)):(o._buttonElement.classList.remove(o._settings.inactiveButtonClass),o._buttonElement.removeAttribute("disabled"))})),r(this,"_setEventListeners",(function(){o._inputList.forEach((function(e){e.addEventListener("input",(function(){o._checkInputValidity(e),o._toggleButtonState(o._inputList,o._buttonElement)}))}))})),r(this,"enableValidation",(function(){o._setEventListeners()})),this._settings=t,this._form=n,this._inputList=Array.from(this._form.querySelectorAll(this._settings.inputSelector)),this._buttonElement=this._form.querySelector(this._settings.submitButtonSelector)}var t,o;return t=e,(o=[{key:"resetValidation",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){e._hideInputError(t)}))}}])&&n(t.prototype,o),Object.defineProperty(t,"prototype",{writable:!1}),e}();function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var a=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this),this._handleClickOutsideClose=this._handleClickOutsideClose.bind(this),this._submitButton=this._popup.querySelector(".popup__button")}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("popup_active"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_active"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"renderLoading",value:function(e,t){e?(this._submitButton.textContent=t,this._submitButton.style.pointerEvents="none"):(this._submitButton.textContent=t,this._submitButton.removeAttribute("style"))}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"_handleClickOutsideClose",value:function(e){e.target.classList.contains("popup_active")&&this.close(),e.target.classList.contains("popup__close-button")&&this.close()}},{key:"setEventListeners",value:function(){this._popup.addEventListener("mousedown",this._handleClickOutsideClose)}}])&&i(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function c(e){return c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},c(e)}function u(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function s(){return s="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=l(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},s.apply(this,arguments)}function l(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=h(e)););return e}function f(e,t){return f=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},f(e,t)}function p(e,t){if(t&&("object"===c(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function h(e){return h=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},h(e)}var d=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&f(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=h(r);if(o){var n=h(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return p(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._handleFormSubmit=t,n._inputList=n._popup.querySelectorAll(".popup__input"),n}return t=a,(n=[{key:"getInputValues",value:function(){var e=this;return this._formValues={},this._inputList.forEach((function(t){e._formValues[t.name]=t.value})),this._formValues}},{key:"setEventListeners",value:function(){var e=this;s(h(a.prototype),"setEventListeners",this).call(this),this._form=this._popup.querySelector(".popup__form"),this._form.addEventListener("submit",(function(t){t.preventDefault(),e.renderLoading(!0,"Сохранение..."),e._handleFormSubmit(e.getInputValues())}))}},{key:"close",value:function(){s(h(a.prototype),"close",this).call(this),this._form.reset()}}])&&u(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(a);function _(e){return _="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_(e)}function y(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function v(){return v="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=b(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},v.apply(this,arguments)}function b(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=g(e)););return e}function m(e,t){return m=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},m(e,t)}function k(e,t){if(t&&("object"===_(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function g(e){return g=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},g(e)}var w=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&m(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=g(r);if(o){var n=g(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return k(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._image=t._popup.querySelector(".place-inspector__image"),t._name=t._popup.querySelector(".place-inspector__name"),t}return t=a,(n=[{key:"open",value:function(e,t){v(g(a.prototype),"open",this).call(this),this._image.alt=e,this._image.src=t,this._name.textContent=e}}])&&y(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(a);function C(e){return C="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},C(e)}function O(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function E(){return E="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=S(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},E.apply(this,arguments)}function S(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=j(e)););return e}function L(e,t){return L=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},L(e,t)}function P(e,t){if(t&&("object"===C(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function j(e){return j=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},j(e)}var I=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&L(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=j(r);if(o){var n=j(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return P(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._confirmDeleteButton=n._popup.querySelector(".popup__delete-place-button"),n._handleConfirmation=t,n}return t=a,(n=[{key:"open",value:function(e,t){E(j(a.prototype),"open",this).call(this),this._removingCard=e,this._cardId=t}},{key:"setEventListeners",value:function(){var e=this;E(j(a.prototype),"setEventListeners",this).call(this),this._form=this._popup.querySelector(".popup__form"),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._handleConfirmation(e._removingCard,e._cardId).then((function(){e.close()}))}))}}])&&O(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(a);function R(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var B=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=t.profileName,this._about=t.profileAbout,this._avatar=t.profileAvatar}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._name.textContent,about:this._about.textContent,avatar:this._avatar.src}}},{key:"getId",value:function(){return this._id}},{key:"setId",value:function(e){this._id=e}},{key:"getUserData",value:function(e){this._name.textContent=e.name,this._about.textContent=e.about,this._avatar.src=e.avatar}},{key:"setUserInfo",value:function(e){this._name.textContent=e["name-input"],this._about.textContent=e["about-input"]}},{key:"setUserAvatar",value:function(e){this._avatar.src=e["new-avatar-link-input"]}}])&&R(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function A(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var q=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=r,this._container=n}var t,n;return t=e,(n=[{key:"addItem",value:function(e){this._container.prepend(e)}},{key:"renderItems",value:function(e){var t=this;e.forEach((function(e){t._renderer(e)}))}}])&&A(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function T(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var U=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._serverUrl=t.serverUrl,this._headers=t.headers}var t,n;return t=e,(n=[{key:"_checkResponse",value:function(e){return e.ok?e.json():Promise.reject("Ошибка загрузки данных: ".concat(e.status))}},{key:"getPlaceCards",value:function(){return fetch("".concat(this._serverUrl,"/cards"),{method:"GET",headers:this._headers}).then(this._checkResponse)}},{key:"getProfileData",value:function(){return fetch("".concat(this._serverUrl,"/users/me"),{method:"GET",headers:this._headers}).then(this._checkResponse)}},{key:"editProfile",value:function(e){return fetch("".concat(this._serverUrl,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e["name-input"],about:e["about-input"]})}).then(this._checkResponse)}},{key:"editAvatar",value:function(e){return fetch("".concat(this._serverUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e["new-avatar-link-input"]})}).then(this._checkResponse)}},{key:"addPlaceCard",value:function(e){return fetch("".concat(this._serverUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:e["place-name-input"],link:e["place-link-input"]})}).then(this._checkResponse)}},{key:"deletePlaceCard",value:function(e){return fetch("".concat(this._serverUrl,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then(this._checkResponse)}},{key:"setLike",value:function(e){return fetch("".concat(this._serverUrl,"/cards/").concat(e,"/likes"),{method:"PUT",headers:this._headers}).then(this._checkResponse)}},{key:"removeLike",value:function(e){return fetch("".concat(this._serverUrl,"/cards/").concat(e,"/likes"),{method:"DELETE",headers:this._headers}).then(this._checkResponse)}}])&&T(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),x=document.querySelector(".profile__name"),D=document.querySelector(".profile__description"),V=document.querySelector(".profile__edit-button"),N=document.querySelector(".profile__place-add-button"),J=document.querySelector(".places__list"),F=document.querySelector(".popup__input_profile_name"),G=document.querySelector(".popup__input_profile_about"),H=document.querySelector(".profile__avatar-button"),M=document.querySelector(".profile__avatar");function z(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var $,K={};$={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__input-error_visible",closeButton:".popup__close-button"},Array.from(document.querySelectorAll($.formSelector)).forEach((function(e){var t=new o($,e),n=e.getAttribute("name");K[n]=t,t.enableValidation()}));var Q=new U({serverUrl:"https://mesto.nomoreparties.co/v1/cohort-46",headers:{authorization:"d50d179a-e68e-48cd-9f64-645c0bfe8409","Content-Type":"application/json"}}),W=new B({profileName:x,profileAbout:D,profileAvatar:M});function X(e){var n=new t(e,".place-template",W.getId(),{handleCardClick:function(e,t){Z.open(e,t),Z.setEventListeners()},handleLikeClick:function(e){n.likeIsActive?Q.removeLike(e).then((function(){n.deleteLike()})).catch((function(e){console.log(e)})):Q.setLike(e).then((function(){n.addLike()})).catch((function(e){console.log(e)}))},handleDeleteIconClick:function(e){ee.open(e,e.id),ee.setEventListeners()}});return n.generateCard()}var Y=new q({renderer:function(e){var t=X(e);Y.addItem(t)}},J);Promise.all([Q.getProfileData(),Q.getPlaceCards()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,c=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){c=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(c)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return z(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?z(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];W.getUserData(o),W.setId(o._id),Y.renderItems(i.reverse())})).catch((function(e){console.log(e)}));var Z=new w(".popup_place-inspector"),ee=new I(".popup_type_delete-place-card",(function(e,t){return Q.deletePlaceCard(t).then((function(){e.remove()})).catch((function(e){console.log(e)}))})),te=new d(".popup_type_profile-edit",(function(){var e=te.getInputValues();Q.editProfile(e).then((function(){W.setUserInfo(e),te.close()})).catch((function(e){console.log(e)})).finally((function(){te.renderLoading(!1,"Сохранить")}))}));te.setEventListeners(),V.addEventListener("click",(function(){te.open();var e=W.getUserInfo();F.value=e.name,G.value=e.about,K["profile-form"].resetValidation()}));var ne=new d(".popup_type_change-avatar",(function(){var e=ne.getInputValues();Q.editAvatar(e).then((function(){W.setUserAvatar(e),ne.close()})).catch((function(e){console.log(e)})).finally((function(){ne.renderLoading(!1,"Сохранить")}))}));ne.setEventListeners(),H.addEventListener("click",(function(){ne.open(),K["change-avatar-form"].resetValidation()}));var re=new d(".popup_type_place-add",(function(){var e=re.getInputValues();Q.addPlaceCard(e).then((function(e){var t=X(e);Y.addItem(t),re.close()})).catch((function(e){console.log(e)})).finally((function(){re.renderLoading(!1,"Создать")}))}));re.setEventListeners(),N.addEventListener("click",(function(){re.open(),K["place-add-form"].resetValidation()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoieUxBQU8sSUFBTUEsRUFBYixXQUNFLFdBQ0VDLEVBQ0FDLEVBQ0FDLEVBSEYsR0FTRSxJQUpBQyxFQUlBLEVBSkFBLGdCQUNBQyxFQUdBLEVBSEFBLGdCQUNBQyxFQUVBLEVBRkFBLHVCLDRGQUVBLFNBQ0FDLEtBQUtDLE1BQVFQLEVBQUtRLEtBQ2xCRixLQUFLRyxNQUFRVCxFQUFLVSxLQUNsQkosS0FBS0ssSUFBTVgsRUFBS1csSUFDaEJMLEtBQUtNLFNBQVdaLEVBQUthLE1BQU1GLElBQzNCTCxLQUFLUSxlQUFpQlosRUFDdEJJLEtBQUtTLGNBQWdCZCxFQUNyQkssS0FBS1UsaUJBQW1CYixFQUN4QkcsS0FBS1csaUJBQW1CYixFQUN4QkUsS0FBS1ksdUJBQXlCYixFQUM5QkMsS0FBS2EsYUFBZW5CLEVBQUtvQixNQUFNQyxPQUMvQmYsS0FBS2dCLE9BQVN0QixFQUFLb0IsS0FDcEIsQyxRQXRCSCxPLEVBQUEsRyxFQUFBLHNCQXdCRSxXQUNFZCxLQUFLaUIsV0FBV0MsVUFBVUMsSUFBSSw2QkFDOUJuQixLQUFLb0IsY0FBZSxFQUNwQnBCLEtBQUthLGVBQ0xiLEtBQUtpQixXQUFXSSxZQUFjckIsS0FBS2EsWUFDcEMsR0E3Qkgsd0JBK0JFLFdBQ0ViLEtBQUtpQixXQUFXQyxVQUFVSSxPQUFPLDZCQUNqQ3RCLEtBQUtvQixjQUFlLEVBQ3BCcEIsS0FBS2EsZUFDTGIsS0FBS2lCLFdBQVdJLFlBQWNyQixLQUFLYSxZQUNwQyxHQXBDSCx5QkFzQ0UsV0FDRWIsS0FBS3VCLFNBQVNELFFBQ2YsR0F4Q0gsMEJBMENFLFdBTUUsT0FMb0JFLFNBQ2pCQyxjQUFjekIsS0FBS1MsZUFDbkJpQixRQUFRRCxjQUFjLFVBQ3RCRSxXQUFVLEVBR2QsR0FqREgsZ0NBbURFLFdBQXFCLFdBQ25CM0IsS0FBS2lCLFdBQWFqQixLQUFLdUIsU0FBU0UsY0FBYyx1QkFDOUN6QixLQUFLNEIsY0FBZ0I1QixLQUFLdUIsU0FBU0UsY0FBYyx5QkFDakR6QixLQUFLNkIsT0FBUzdCLEtBQUt1QixTQUFTRSxjQUFjLGlCQUUxQ3pCLEtBQUs2QixPQUFPQyxpQkFBaUIsU0FBUyxXQUNwQyxFQUFLcEIsaUJBQWlCLEVBQUtULE1BQU8sRUFBS0UsTUFDeEMsSUFFREgsS0FBS2lCLFdBQVlhLGlCQUFpQixTQUFTLFdBQ3pDLEVBQUtuQixpQkFBaUIsRUFBS04sSUFBSyxFQUFLZSxhQUN0QyxJQUVEcEIsS0FBSzRCLGNBQWNFLGlCQUFpQixTQUFTLFdBQzNDLEVBQUtsQix1QkFBdUIsRUFBS1csU0FBVSxFQUFLbEIsSUFDakQsR0FDRixHQW5FSCwwQkFxRUUsV0FBZSxXQUNiTCxLQUFLdUIsU0FBV3ZCLEtBQUsrQixlQUNyQi9CLEtBQUtnQyxxQkFFTCxJQUFNQyxFQUFZakMsS0FBS3VCLFNBQVNFLGNBQWMsZ0JBQ3hDUyxFQUFZbEMsS0FBSzZCLE9BdUJ2QixPQXJCQTdCLEtBQUt1QixTQUFTWSxHQUFLbkMsS0FBS0ssSUFDeEI0QixFQUFVWixZQUFjckIsS0FBS0MsTUFDN0JnQyxFQUFVRyxJQUFNcEMsS0FBS0MsTUFDckJpQyxFQUFVRyxJQUFNckMsS0FBS0csTUFFckJILEtBQUtpQixXQUFXSSxZQUFjckIsS0FBS2EsYUFFbkNiLEtBQUtvQixhQUFlcEIsS0FBS2dCLE9BQU9zQixNQUFLLFNBQUNDLEdBQ3BDLEdBQUksRUFBSy9CLGlCQUFtQitCLEVBQUtsQyxJQUMvQixPQUFPLENBRVYsSUFFR0wsS0FBS29CLGNBQ1BwQixLQUFLaUIsV0FBV0MsVUFBVUMsSUFBSSw2QkFHNUJuQixLQUFLTSxXQUFhTixLQUFLUSxnQkFDekJSLEtBQUs0QixjQUFjVixVQUFVQyxJQUFJLGdDQUc1Qm5CLEtBQUt1QixRQUNiLE0sb0VBbEdILEssOFJDQU8sSUFBTWlCLEVBQWIsV0FDRSxXQUFZQyxFQUFVQyxHQUFNLFksNEZBQUEsbUNBWVYsU0FBQ0MsRUFBY0MsR0FDL0IsSUFBTUMsRUFBZSxFQUFLQyxNQUFNckIsY0FBWCxXQUE2QmtCLEVBQWFSLEdBQTFDLFdBQ3JCUSxFQUFhekIsVUFBVUMsSUFBSSxFQUFLNEIsVUFBVUMsaUJBQzFDSCxFQUFheEIsWUFBY3VCLEVBQzNCQyxFQUFhM0IsVUFBVUMsSUFBSSxFQUFLNEIsVUFBVUUsV0FDM0MsSUFqQjJCLDBCQW1CVixTQUFDTixHQUNqQixJQUFNRSxFQUFlLEVBQUtDLE1BQU1yQixjQUFYLFdBQTZCa0IsRUFBYVIsR0FBMUMsV0FDckJRLEVBQWF6QixVQUFVSSxPQUFPLEVBQUt5QixVQUFVQyxpQkFDN0NILEVBQWEzQixVQUFVSSxPQUFPLEVBQUt5QixVQUFVRSxZQUM3Q0osRUFBYXhCLFlBQWMsRUFDNUIsSUF4QjJCLDhCQTBCTixTQUFDc0IsR0FDaEJBLEVBQWFPLFNBQVNDLE1BR3pCLEVBQUtDLGdCQUFnQlQsR0FGckIsRUFBS1UsZ0JBQWdCVixFQUFjQSxFQUFhVyxrQkFJbkQsSUFoQzJCLDJCQWtDVCxXQUNqQixPQUFPLEVBQUtDLFdBQVdqQixNQUFLLFNBQUNLLEdBQzNCLE9BQVFBLEVBQWFPLFNBQVNDLEtBQy9CLEdBQ0YsSUF0QzJCLDZCQXdDUCxXQUNmLEVBQUtLLGlCQUFpQixFQUFLRCxhQUM3QixFQUFLRSxlQUFldkMsVUFBVUMsSUFBSSxFQUFLNEIsVUFBVVcscUJBQ2pELEVBQUtELGVBQWVFLGFBQWEsWUFBWSxLQUU3QyxFQUFLRixlQUFldkMsVUFBVUksT0FBTyxFQUFLeUIsVUFBVVcscUJBQ3BELEVBQUtELGVBQWVHLGdCQUFnQixZQUV2QyxJQWhEMkIsNkJBMERQLFdBQ25CLEVBQUtMLFdBQVdNLFNBQVEsU0FBQ2xCLEdBQ3ZCQSxFQUFhYixpQkFBaUIsU0FBUyxXQUNyQyxFQUFLZ0Msb0JBQW9CbkIsR0FDekIsRUFBS29CLG1CQUFtQixFQUFLUixXQUFZLEVBQUtFLGVBQy9DLEdBQ0YsR0FDRixJQWpFMkIsMkJBbUVULFdBQ2YsRUFBS3pCLG9CQUNSLElBcEVDaEMsS0FBSytDLFVBQVlOLEVBQ2pCekMsS0FBSzhDLE1BQVFKLEVBRWIxQyxLQUFLdUQsV0FBYVMsTUFBTUMsS0FDdEJqRSxLQUFLOEMsTUFBTW9CLGlCQUFpQmxFLEtBQUsrQyxVQUFVb0IsZ0JBRTdDbkUsS0FBS3lELGVBQWlCekQsS0FBSzhDLE1BQU1yQixjQUMvQnpCLEtBQUsrQyxVQUFVcUIscUJBRWxCLEMsUUFYSCxPLEVBQUEsRyxFQUFBLDhCQW1ERSxXQUFrQixXQUNoQnBFLEtBQUsrRCxxQkFFTC9ELEtBQUt1RCxXQUFXTSxTQUFRLFNBQUNsQixHQUN2QixFQUFLUyxnQkFBZ0JULEVBQ3RCLEdBQ0YsTSxvRUF6REgsSyxzS0NBTyxJQUFNMEIsRUFBYixXQUNFLFdBQVlDLEksNEZBQWUsU0FDekJ0RSxLQUFLdUUsT0FBUy9DLFNBQVNDLGNBQWM2QyxHQUNyQ3RFLEtBQUt3RSxnQkFBa0J4RSxLQUFLd0UsZ0JBQWdCQyxLQUFLekUsTUFDakRBLEtBQUswRSx5QkFBMkIxRSxLQUFLMEUseUJBQXlCRCxLQUFLekUsTUFDbkVBLEtBQUsyRSxjQUFnQjNFLEtBQUt1RSxPQUFPOUMsY0FBYyxpQkFDaEQsQyxRQU5ILE8sRUFBQSxHLEVBQUEsbUJBUUUsV0FDRXpCLEtBQUt1RSxPQUFPckQsVUFBVUMsSUFBSSxnQkFDMUJLLFNBQVNNLGlCQUFpQixVQUFXOUIsS0FBS3dFLGdCQUMzQyxHQVhILG1CQWFFLFdBQ0V4RSxLQUFLdUUsT0FBT3JELFVBQVVJLE9BQU8sZ0JBQzdCRSxTQUFTb0Qsb0JBQW9CLFVBQVc1RSxLQUFLd0UsZ0JBQzlDLEdBaEJILDJCQWtCRSxTQUFjSyxFQUFXQyxHQUNuQkQsR0FDRjdFLEtBQUsyRSxjQUFjdEQsWUFBY3lELEVBQ2pDOUUsS0FBSzJFLGNBQWNJLE1BQU1DLGNBQWdCLFNBR3pDaEYsS0FBSzJFLGNBQWN0RCxZQUFjeUQsRUFDakM5RSxLQUFLMkUsY0FBY2YsZ0JBQWdCLFNBRXRDLEdBM0JILDZCQTZCRSxTQUFnQnFCLEdBQ0ksV0FBZEEsRUFBTUMsS0FDUmxGLEtBQUttRixPQUVSLEdBakNILHNDQW1DRSxTQUF5QkYsR0FDbkJBLEVBQU1HLE9BQU9sRSxVQUFVbUUsU0FBUyxpQkFDbENyRixLQUFLbUYsUUFFSEYsRUFBTUcsT0FBT2xFLFVBQVVtRSxTQUFTLHdCQUNsQ3JGLEtBQUttRixPQUVSLEdBMUNILCtCQTRDRSxXQUNFbkYsS0FBS3VFLE9BQU96QyxpQkFBaUIsWUFBYTlCLEtBQUswRSx5QkFDaEQsTSxvRUE5Q0gsSyxxd0NDRU8sSUFBTVksRUFBYixhLHFSQUFBLFUsUUFBQSxHLEVBQUEsRSwrWUFDRSxXQUFZaEIsRUFBZWlCLEdBQWtCLGEsNEZBQUEsVUFDM0MsY0FBTWpCLElBQ0RrQixrQkFBb0JELEVBQ3pCLEVBQUtoQyxXQUFhLEVBQUtnQixPQUFPTCxpQkFBaUIsaUJBSEosQ0FJNUMsQ0FMSCxPLEVBQUEsRyxFQUFBLDZCQU9FLFdBQWlCLFdBT2YsT0FOQWxFLEtBQUt5RixZQUFjLENBQUMsRUFFcEJ6RixLQUFLdUQsV0FBV00sU0FBUSxTQUFDNkIsR0FDdkIsRUFBS0QsWUFBWUMsRUFBTXhGLE1BQVF3RixFQUFNQyxLQUN0QyxJQUVNM0YsS0FBS3lGLFdBQ2IsR0FmSCwrQkFpQkUsV0FBb0IsV0FDbEIsc0RBQ0F6RixLQUFLOEMsTUFBUTlDLEtBQUt1RSxPQUFPOUMsY0FBYyxnQkFDdkN6QixLQUFLOEMsTUFBTWhCLGlCQUFpQixVQUFVLFNBQUM4RCxHQUNyQ0EsRUFBSUMsaUJBRUosRUFBS0MsZUFBYyxFQUFNLGlCQUV6QixFQUFLTixrQkFBa0IsRUFBS08saUJBQzdCLEdBQ0YsR0EzQkgsbUJBNkJFLFdBQ0UsMENBQ0EvRixLQUFLOEMsTUFBTWtELE9BQ1osTSxvRUFoQ0gsR0FBbUMzQixHLHF3Q0NBNUIsSUFBTTRCLEVBQWIsYSxxUkFBQSxVLFFBQUEsRyxFQUFBLEUsK1lBQ0UsV0FBWTNCLEdBQWUsYSw0RkFBQSxVQUN6QixjQUFNQSxJQUNENEIsT0FBUyxFQUFLM0IsT0FBTzlDLGNBQWMsMkJBQ3hDLEVBQUt4QixNQUFRLEVBQUtzRSxPQUFPOUMsY0FBYywwQkFIZCxDQUkxQixDQUxILE8sRUFBQSxHLEVBQUEsbUJBT0UsU0FBS3ZCLEVBQU1FLEdBQ1QseUNBQ0FKLEtBQUtrRyxPQUFPOUQsSUFBTWxDLEVBQ2xCRixLQUFLa0csT0FBTzdELElBQU1qQyxFQUNsQkosS0FBS0MsTUFBTW9CLFlBQWNuQixDQUMxQixNLG9FQVpILEdBQW9DbUUsRyxxd0NDQTdCLElBQU04QixFQUFiLGEscVJBQUEsVSxRQUFBLEcsRUFBQSxFLCtZQUNFLFdBQVk3QixFQUFlOEIsR0FBb0IsYSw0RkFBQSxVQUM3QyxjQUFNOUIsSUFDRCtCLHFCQUF1QixFQUFLOUIsT0FBTzlDLGNBQ3RDLCtCQUVGLEVBQUs2RSxvQkFBc0JGLEVBTGtCLENBTTlDLENBUEgsTyxFQUFBLEcsRUFBQSxtQkFTRSxTQUFLRyxFQUFjQyxHQUNqQix5Q0FDQXhHLEtBQUt5RyxjQUFnQkYsRUFDckJ2RyxLQUFLMEcsUUFBVUYsQ0FDaEIsR0FiSCwrQkFlRSxXQUFvQixXQUNsQixzREFDQXhHLEtBQUs4QyxNQUFROUMsS0FBS3VFLE9BQU85QyxjQUFjLGdCQUN2Q3pCLEtBQUs4QyxNQUFNaEIsaUJBQWlCLFVBQVUsU0FBQzhELEdBRXJDQSxFQUFJQyxpQkFFWSxFQUFLUyxvQkFDbkIsRUFBS0csY0FDTCxFQUFLQyxTQUVDQyxNQUFLLFdBQ1gsRUFBS3hCLE9BQ04sR0FDRixHQUNGLE0sb0VBOUJILEdBQTJDZCxHLHNLQ0ZwQyxJQUFNdUMsRUFBYixXQUNFLFdBQVlsSCxJLDRGQUFNLFNBQ2hCTSxLQUFLQyxNQUFRUCxFQUFLbUgsWUFDbEI3RyxLQUFLOEcsT0FBU3BILEVBQUtxSCxhQUNuQi9HLEtBQUtnSCxRQUFVdEgsRUFBS3VILGFBQ3JCLEMsUUFMSCxPLEVBQUEsRyxFQUFBLDBCQU9FLFdBQ0UsTUFBTyxDQUNML0csS0FBTUYsS0FBS0MsTUFBTW9CLFlBQ2pCNkYsTUFBT2xILEtBQUs4RyxPQUFPekYsWUFDbkI4RixPQUFRbkgsS0FBS2dILFFBQVEzRSxJQUV4QixHQWJILG1CQWVFLFdBQ0UsT0FBT3JDLEtBQUtLLEdBQ2IsR0FqQkgsbUJBbUJFLFNBQU04QixHQUNKbkMsS0FBS0ssSUFBTThCLENBQ1osR0FyQkgseUJBdUJFLFNBQVl6QyxHQUNWTSxLQUFLQyxNQUFNb0IsWUFBYzNCLEVBQUtRLEtBQzlCRixLQUFLOEcsT0FBT3pGLFlBQWMzQixFQUFLd0gsTUFDL0JsSCxLQUFLZ0gsUUFBUTNFLElBQU0zQyxFQUFLeUgsTUFDekIsR0EzQkgseUJBNkJFLFNBQVl6SCxHQUNWTSxLQUFLQyxNQUFNb0IsWUFBYzNCLEVBQUssY0FDOUJNLEtBQUs4RyxPQUFPekYsWUFBYzNCLEVBQUssY0FDaEMsR0FoQ0gsMkJBa0NFLFNBQWNBLEdBQ1pNLEtBQUtnSCxRQUFRM0UsSUFBTTNDLEVBQUssd0JBQ3pCLE0sb0VBcENILEssc0tDQU8sSUFBTTBILEVBQWIsV0FDRSxhQUEwQkMsR0FBVyxJQUF2QkMsRUFBdUIsRUFBdkJBLFUsNEZBQXVCLFNBQ25DdEgsS0FBS3VILFVBQVlELEVBQ2pCdEgsS0FBS3dILFdBQWFILENBQ25CLEMsUUFKSCxPLEVBQUEsRyxFQUFBLHNCQU1FLFNBQVFJLEdBQ056SCxLQUFLd0gsV0FBV0UsUUFBUUQsRUFDekIsR0FSSCx5QkFVRSxTQUFZRSxHQUFPLFdBQ2pCQSxFQUFNOUQsU0FBUSxTQUFDNEQsR0FDYixFQUFLRixVQUFVRSxFQUNoQixHQUNGLE0sb0VBZEgsSyxzS0NBTyxJQUFNRyxFQUFiLFdBQ0UsV0FBWUMsSSw0RkFBUSxTQUNsQjdILEtBQUs4SCxXQUFhRCxFQUFPRSxVQUN6Qi9ILEtBQUtnSSxTQUFXSCxFQUFPSSxPQUN4QixDLFFBSkgsTyxFQUFBLEcsRUFBQSw2QkFNRSxTQUFlQyxHQUNiLE9BQUlBLEVBQUlDLEdBQ0NELEVBQUlFLE9BR05DLFFBQVFDLE9BQVIsa0NBQTBDSixFQUFJSyxRQUN0RCxHQVpILDJCQWNFLFdBQ0UsT0FBT0MsTUFBTSxHQUFELE9BQUl4SSxLQUFLOEgsV0FBVCxVQUE2QixDQUN2Q1csT0FBUSxNQUNSUixRQUFTakksS0FBS2dJLFdBQ2JyQixLQUFLM0csS0FBSzBJLGVBQ2QsR0FuQkgsNEJBcUJFLFdBQ0UsT0FBT0YsTUFBTSxHQUFELE9BQUl4SSxLQUFLOEgsV0FBVCxhQUFnQyxDQUMxQ1csT0FBUSxNQUNSUixRQUFTakksS0FBS2dJLFdBQ2JyQixLQUFLM0csS0FBSzBJLGVBQ2QsR0ExQkgseUJBNEJFLFNBQVloSixHQUNWLE9BQU84SSxNQUFNLEdBQUQsT0FBSXhJLEtBQUs4SCxXQUFULGFBQWdDLENBQzFDVyxPQUFRLFFBQ1JSLFFBQVNqSSxLQUFLZ0ksU0FDZFcsS0FBTUMsS0FBS0MsVUFBVSxDQUNuQjNJLEtBQU1SLEVBQUssY0FDWHdILE1BQU94SCxFQUFLLG1CQUViaUgsS0FBSzNHLEtBQUswSSxlQUNkLEdBckNILHdCQXVDRSxTQUFXaEosR0FDVCxPQUFPOEksTUFBTSxHQUFELE9BQUl4SSxLQUFLOEgsV0FBVCxvQkFBdUMsQ0FDakRXLE9BQVEsUUFDUlIsUUFBU2pJLEtBQUtnSSxTQUNkVyxLQUFNQyxLQUFLQyxVQUFVLENBQ25CMUIsT0FBUXpILEVBQUssNkJBRWRpSCxLQUFLM0csS0FBSzBJLGVBQ2QsR0EvQ0gsMEJBaURFLFNBQWFoSixHQUNYLE9BQU84SSxNQUFNLEdBQUQsT0FBSXhJLEtBQUs4SCxXQUFULFVBQTZCLENBQ3ZDVyxPQUFRLE9BQ1JSLFFBQVNqSSxLQUFLZ0ksU0FDZFcsS0FBTUMsS0FBS0MsVUFBVSxDQUNuQjNJLEtBQU1SLEVBQUssb0JBQ1hVLEtBQU1WLEVBQUssd0JBRVppSCxLQUFLM0csS0FBSzBJLGVBQ2QsR0ExREgsNkJBNERFLFNBQWdCbEMsR0FDZCxPQUFPZ0MsTUFBTSxHQUFELE9BQUl4SSxLQUFLOEgsV0FBVCxrQkFBNkJ0QixHQUFVLENBQ2pEaUMsT0FBUSxTQUNSUixRQUFTakksS0FBS2dJLFdBQ2JyQixLQUFLM0csS0FBSzBJLGVBQ2QsR0FqRUgscUJBbUVFLFNBQVFsQyxHQUNOLE9BQU9nQyxNQUFNLEdBQUQsT0FBSXhJLEtBQUs4SCxXQUFULGtCQUE2QnRCLEVBQTdCLFVBQTZDLENBQ3ZEaUMsT0FBUSxNQUNSUixRQUFTakksS0FBS2dJLFdBQ2JyQixLQUFLM0csS0FBSzBJLGVBQ2QsR0F4RUgsd0JBMEVFLFNBQVdsQyxHQUNULE9BQU9nQyxNQUFNLEdBQUQsT0FBSXhJLEtBQUs4SCxXQUFULGtCQUE2QnRCLEVBQTdCLFVBQTZDLENBQ3ZEaUMsT0FBUSxTQUNSUixRQUFTakksS0FBS2dJLFdBQ2JyQixLQUFLM0csS0FBSzBJLGVBQ2QsTSxvRUEvRUgsS0NVTTdCLEVBQWNyRixTQUFTQyxjQUFjLGtCQUNyQ3NGLEVBQWV2RixTQUFTQyxjQUFjLHlCQUN0Q3FILEVBQW9CdEgsU0FBU0MsY0FBYyx5QkFDM0NzSCxFQUFpQnZILFNBQVNDLGNBQWMsOEJBQ3hDdUgsRUFBYXhILFNBQVNDLGNBQWMsaUJBQ3BDd0gsRUFBWXpILFNBQVNDLGNBQWMsOEJBQ25DeUgsRUFBYTFILFNBQVNDLGNBQWMsK0JBQ3BDMEgsRUFBcUIzSCxTQUFTQyxjQUFjLDJCQUM1Q3dGLEVBQWdCekYsU0FBU0MsY0FBYyxvQiwwR0NLN0MsSUFFMEJvRyxFQUZwQnVCLEVBQWlCLENBQUMsRUFFRXZCLEVEekJFLENBQzFCd0IsYUFBYyxlQUNkbEYsY0FBZSxnQkFDZkMscUJBQXNCLGlCQUN0QlYsb0JBQXFCLHlCQUNyQlYsZ0JBQWlCLDBCQUNqQkMsV0FBWSw2QkFDWnFHLFlBQWEsd0JDbUJJdEYsTUFBTUMsS0FBS3pDLFNBQVMwQyxpQkFBaUIyRCxFQUFPd0IsZUFDcER4RixTQUFRLFNBQUMwRixHQUNoQixJQUFNQyxFQUFZLElBQUloSCxFQUFjcUYsRUFBUTBCLEdBQ3RDRSxFQUFXRixFQUFZRyxhQUFhLFFBRTFDTixFQUFlSyxHQUFZRCxFQUMzQkEsRUFBVUcsa0JBQ1gsSUFPSCxJQVFNQyxFQUFNLElBQUloQyxFQVJELENBQ2JHLFVBQVcsOENBQ1hFLFFBQVMsQ0FDUDRCLGNBQWUsdUNBQ2YsZUFBZ0Isc0JBUWRDLEVBQVcsSUFBSWxELEVBQVMsQ0FBRUMsWUFBQUEsRUFBYUUsYUFBQUEsRUFBY0UsY0FBQUEsSUFJM0QsU0FBUzhDLEVBQVdySyxHQUNsQixJQUFNc0ssRUFBTyxJQUFJdkssRUFDZkMsRUFDQSxrQkFDQW9LLEVBQVNHLFFBQ1QsQ0FDRXBLLGdCQUFpQixTQUFDSyxFQUFNRSxHQUN0QjhKLEVBQW9CQyxLQUFLakssRUFBTUUsR0FFL0I4SixFQUFvQkUsbUJBQ3JCLEVBQ0R0SyxnQkFBaUIsU0FBQzBHLEdBQ1p3RCxFQUFLNUksYUFDUHdJLEVBQ0NTLFdBQVc3RCxHQUNYRyxNQUFLLFdBQ0pxRCxFQUFLTSxZQUNOLElBQ0FDLE9BQU0sU0FBQ0MsR0FDTkMsUUFBUUMsSUFBSUYsRUFDYixJQUVEWixFQUNDZSxRQUFRbkUsR0FDUkcsTUFBSyxXQUNKcUQsRUFBS1ksU0FDTixJQUNBTCxPQUFNLFNBQUNDLEdBQ05DLFFBQVFDLElBQUlGLEVBQ2IsR0FFSixFQUNEekssc0JBQXVCLFNBQUN3RyxHQUN0QnNFLEdBQTRCVixLQUFLNUQsRUFBY0EsRUFBYXBFLElBRTVEMEksR0FBNEJULG1CQUM3QixJQUlMLE9BRG9CSixFQUFLYyxjQUUxQixDQUlELElBQU1DLEVBQWEsSUFBSTNELEVBQ3JCLENBQ0VFLFNBQVUsU0FBQzBDLEdBQ1QsSUFBTWdCLEVBQWNqQixFQUFXQyxHQUMvQmUsRUFBV0UsUUFBUUQsRUFDcEIsR0FFSGhDLEdBTUZYLFFBQVE2QyxJQUFJLENBQ1Z0QixFQUFJdUIsaUJBQ0p2QixFQUFJd0Isa0JBRUx6RSxNQUFLLFlBQW1CLEksSUFBQSxHLEVBQUEsRSw0Q0FBQSxJLGd4QkFBakJqSCxFQUFpQixLQUFYMkwsRUFBVyxLQUV2QnZCLEVBQVN3QixZQUFZNUwsR0FDckJvSyxFQUFTeUIsTUFBTTdMLEVBQUtXLEtBRXRCMEssRUFBV1MsWUFBWUgsRUFBTUksVUFFNUIsSUFDQWxCLE9BQU0sU0FBQ0MsR0FDTkMsUUFBUUMsSUFBSUYsRUFDYixJQUlELElBQU1OLEVBQXNCLElBQUlqRSxFQUFlLDBCQUV6QzRFLEdBQThCLElBQUkxRSxFQUN0QyxpQ0FDQSxTQUFDSSxFQUFjQyxHQUFmLE9BQ0VvRCxFQUNHOEIsZ0JBQWdCbEYsR0FDaEJHLE1BQUssV0FDSkosRUFBYWpGLFFBQ2QsSUFDQWlKLE9BQU0sU0FBQ0MsR0FDTkMsUUFBUUMsSUFBSUYsRUFDYixHQVJMLElBWUltQixHQUFtQixJQUFJckcsRUFBYyw0QkFBNEIsV0FDckUsSUFBTTVGLEVBQU9pTSxHQUFpQjVGLGlCQUM5QjZELEVBQ0dnQyxZQUFZbE0sR0FDWmlILE1BQUssV0FDSm1ELEVBQVMrQixZQUFZbk0sR0FDckJpTSxHQUFpQnhHLE9BQ2xCLElBQ0FvRixPQUFNLFNBQUNDLEdBQ05DLFFBQVFDLElBQUlGLEVBQ2IsSUFDQXNCLFNBQVEsV0FDUEgsR0FBaUI3RixlQUFjLEVBQU8sWUFDdkMsR0FDSixJQUVENkYsR0FBaUJ2QixvQkFFakJ0QixFQUFrQmhILGlCQUFpQixTQUFTLFdBQzFDNkosR0FBaUJ4QixPQUNqQixJQUFNNEIsRUFBa0JqQyxFQUFTa0MsY0FFakMvQyxFQUFVdEQsTUFBUW9HLEVBQWdCN0wsS0FDbENnSixFQUFXdkQsTUFBUW9HLEVBQWdCN0UsTUFFbkNrQyxFQUFlLGdCQUFnQjZDLGlCQUNoQyxJQUlELElBQU1DLEdBQWtCLElBQUk1RyxFQUFjLDZCQUE2QixXQUNyRSxJQUFNNUYsRUFBT3dNLEdBQWdCbkcsaUJBQzdCNkQsRUFDR3VDLFdBQVd6TSxHQUNYaUgsTUFBSyxXQUNKbUQsRUFBU3NDLGNBQWMxTSxHQUN2QndNLEdBQWdCL0csT0FDakIsSUFDQW9GLE9BQU0sU0FBQ0MsR0FDTkMsUUFBUUMsSUFBSUYsRUFDYixJQUNBc0IsU0FBUSxXQUNQSSxHQUFnQnBHLGVBQWMsRUFBTyxZQUN0QyxHQUNKLElBRURvRyxHQUFnQjlCLG9CQUVoQmpCLEVBQW1CckgsaUJBQWlCLFNBQVMsV0FDM0NvSyxHQUFnQi9CLE9BQ2hCZixFQUFlLHNCQUFzQjZDLGlCQUN0QyxJQUlELElBQU1JLEdBQWdCLElBQUkvRyxFQUFjLHlCQUF5QixXQUMvRCxJQUFNNUYsRUFBTzJNLEdBQWN0RyxpQkFDM0I2RCxFQUNHMEMsYUFBYTVNLEdBQ2JpSCxNQUFLLFNBQUNxRCxHQUNMLElBQU1nQixFQUFjakIsRUFBV0MsR0FDL0JlLEVBQVdFLFFBQVFELEdBRW5CcUIsR0FBY2xILE9BQ2YsSUFDQW9GLE9BQU0sU0FBQ0MsR0FDTkMsUUFBUUMsSUFBSUYsRUFDYixJQUNBc0IsU0FBUSxXQUNQTyxHQUFjdkcsZUFBYyxFQUFPLFVBQ3BDLEdBQ0osSUFFRHVHLEdBQWNqQyxvQkFFZHJCLEVBQWVqSCxpQkFBaUIsU0FBUyxXQUN2Q3VLLEdBQWNsQyxPQUNkZixFQUFlLGtCQUFrQjZDLGlCQUNsQyxHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL9ChYXJkLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL3NjcmlwdHMvY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL3NjcmlwdHMvY29tcG9uZW50cy9Qb3B1cC5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9zY3JpcHRzL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9zY3JpcHRzL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL1BvcHVwV2l0aENvbmZpcm1hdGlvbi5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9zY3JpcHRzL2NvbXBvbmVudHMvVXNlckluZm8uanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL1NlY3Rpb24uanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL0FwaS5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9zY3JpcHRzL3V0aWxzL2NvbnN0YW50cy5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9wYWdlcy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgQ2FyZCB7XG4gIGNvbnN0cnVjdG9yKFxuICAgIGRhdGEsXG4gICAgY2FyZFNlbGVjdG9yLFxuICAgIGN1cnJlbnRVc2VySWQsXG4gICAge1xuICAgIGhhbmRsZUNhcmRDbGljayxcbiAgICBoYW5kbGVMaWtlQ2xpY2ssXG4gICAgaGFuZGxlRGVsZXRlSWNvbkNsaWNrXG4gICAgfVxuICApIHtcbiAgICB0aGlzLl9uYW1lID0gZGF0YS5uYW1lO1xuICAgIHRoaXMuX2xpbmsgPSBkYXRhLmxpbms7XG4gICAgdGhpcy5faWQgPSBkYXRhLl9pZDtcbiAgICB0aGlzLl9vd25lcklkID0gZGF0YS5vd25lci5faWQ7XG4gICAgdGhpcy5fY3VycmVudFVzZXJJZCA9IGN1cnJlbnRVc2VySWQ7XG4gICAgdGhpcy5fY2FyZFNlbGVjdG9yID0gY2FyZFNlbGVjdG9yO1xuICAgIHRoaXMuX2hhbmRsZUNhcmRDbGljayA9IGhhbmRsZUNhcmRDbGljaztcbiAgICB0aGlzLl9oYW5kbGVMaWtlQ2xpY2sgPSBoYW5kbGVMaWtlQ2xpY2s7XG4gICAgdGhpcy5faGFuZGxlRGVsZXRlSWNvbkNsaWNrID0gaGFuZGxlRGVsZXRlSWNvbkNsaWNrO1xuICAgIHRoaXMuX2xpa2VDb3VudGVyID0gZGF0YS5saWtlcy5sZW5ndGg7XG4gICAgdGhpcy5fbGlrZXMgPSBkYXRhLmxpa2VzO1xuICB9XG5cbiAgYWRkTGlrZSgpIHtcbiAgICB0aGlzLmxpa2VCdXR0b24uY2xhc3NMaXN0LmFkZChcInBsYWNlX19saWtlLWJ1dHRvbl9hY3RpdmVcIik7XG4gICAgdGhpcy5saWtlSXNBY3RpdmUgPSB0cnVlO1xuICAgIHRoaXMuX2xpa2VDb3VudGVyKys7XG4gICAgdGhpcy5saWtlQnV0dG9uLnRleHRDb250ZW50ID0gdGhpcy5fbGlrZUNvdW50ZXI7XG4gIH1cblxuICBkZWxldGVMaWtlKCkge1xuICAgIHRoaXMubGlrZUJ1dHRvbi5jbGFzc0xpc3QucmVtb3ZlKFwicGxhY2VfX2xpa2UtYnV0dG9uX2FjdGl2ZVwiKTtcbiAgICB0aGlzLmxpa2VJc0FjdGl2ZSA9IGZhbHNlO1xuICAgIHRoaXMuX2xpa2VDb3VudGVyLS07XG4gICAgdGhpcy5saWtlQnV0dG9uLnRleHRDb250ZW50ID0gdGhpcy5fbGlrZUNvdW50ZXI7XG4gIH1cblxuICBfcmVtb3ZlQ2FyZCgpIHtcbiAgICB0aGlzLl9lbGVtZW50LnJlbW92ZSgpO1xuICB9XG5cbiAgX2dldFRlbXBsYXRlKCkge1xuICAgIGNvbnN0IGNhcmRFbGVtZW50ID0gZG9jdW1lbnRcbiAgICAgIC5xdWVyeVNlbGVjdG9yKHRoaXMuX2NhcmRTZWxlY3RvcilcbiAgICAgIC5jb250ZW50LnF1ZXJ5U2VsZWN0b3IoXCIucGxhY2VcIilcbiAgICAgIC5jbG9uZU5vZGUodHJ1ZSk7XG5cbiAgICByZXR1cm4gY2FyZEVsZW1lbnQ7XG4gIH1cblxuICBfc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgdGhpcy5saWtlQnV0dG9uID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLnBsYWNlX19saWtlLWJ1dHRvblwiKTtcbiAgICB0aGlzLl9kZWxldGVCdXR0b24gPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucGxhY2VfX2RlbGV0ZS1idXR0b25cIik7XG4gICAgdGhpcy5fcGhvdG8gPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucGxhY2VfX3Bob3RvXCIpO1xuXG4gICAgdGhpcy5fcGhvdG8uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgIHRoaXMuX2hhbmRsZUNhcmRDbGljayh0aGlzLl9uYW1lLCB0aGlzLl9saW5rKTtcbiAgICB9KTtcblxuICAgIHRoaXMubGlrZUJ1dHRvbiAuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgIHRoaXMuX2hhbmRsZUxpa2VDbGljayh0aGlzLl9pZCwgdGhpcy5saWtlSXNBY3RpdmUpO1xuICAgIH0pO1xuXG4gICAgdGhpcy5fZGVsZXRlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICB0aGlzLl9oYW5kbGVEZWxldGVJY29uQ2xpY2sodGhpcy5fZWxlbWVudCwgdGhpcy5faWQpO1xuICAgIH0pO1xuICB9XG5cbiAgZ2VuZXJhdGVDYXJkKCkge1xuICAgIHRoaXMuX2VsZW1lbnQgPSB0aGlzLl9nZXRUZW1wbGF0ZSgpO1xuICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XG5cbiAgICBjb25zdCBwbGFjZU5hbWUgPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucGxhY2VfX25hbWVcIik7XG4gICAgY29uc3QgcGxhY2VMaW5rID0gdGhpcy5fcGhvdG87XG5cbiAgICB0aGlzLl9lbGVtZW50LmlkID0gdGhpcy5faWQ7XG4gICAgcGxhY2VOYW1lLnRleHRDb250ZW50ID0gdGhpcy5fbmFtZTtcbiAgICBwbGFjZU5hbWUuYWx0ID0gdGhpcy5fbmFtZTtcbiAgICBwbGFjZUxpbmsuc3JjID0gdGhpcy5fbGluaztcblxuICAgIHRoaXMubGlrZUJ1dHRvbi50ZXh0Q29udGVudCA9IHRoaXMuX2xpa2VDb3VudGVyO1xuXG4gICAgdGhpcy5saWtlSXNBY3RpdmUgPSB0aGlzLl9saWtlcy5zb21lKCh1c2VyKSA9PiB7XG4gICAgICBpZiAodGhpcy5fY3VycmVudFVzZXJJZCA9PT0gdXNlci5faWQpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICBpZiAodGhpcy5saWtlSXNBY3RpdmUpIHtcbiAgICAgIHRoaXMubGlrZUJ1dHRvbi5jbGFzc0xpc3QuYWRkKFwicGxhY2VfX2xpa2UtYnV0dG9uX2FjdGl2ZVwiKTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5fb3duZXJJZCA9PT0gdGhpcy5fY3VycmVudFVzZXJJZCkge1xuICAgICAgdGhpcy5fZGVsZXRlQnV0dG9uLmNsYXNzTGlzdC5hZGQoXCJwbGFjZV9fZGVsZXRlLWJ1dHRvbl92aXNpYmxlXCIpO1xuICAgIH1cblxuICAgIHJldHVybiB0aGlzLl9lbGVtZW50O1xuICB9XG59XG4iLCJleHBvcnQgY2xhc3MgRm9ybVZhbGlkYXRvciB7XG4gIGNvbnN0cnVjdG9yKHNldHRpbmdzLCBmb3JtKSB7XG4gICAgdGhpcy5fc2V0dGluZ3MgPSBzZXR0aW5ncztcbiAgICB0aGlzLl9mb3JtID0gZm9ybTtcblxuICAgIHRoaXMuX2lucHV0TGlzdCA9IEFycmF5LmZyb20oXG4gICAgICB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3JBbGwodGhpcy5fc2V0dGluZ3MuaW5wdXRTZWxlY3RvcilcbiAgICApO1xuICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQgPSB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3IoXG4gICAgICB0aGlzLl9zZXR0aW5ncy5zdWJtaXRCdXR0b25TZWxlY3RvclxuICAgICk7XG4gIH1cblxuICBfc2hvd0lucHV0RXJyb3IgPSAoaW5wdXRFbGVtZW50LCBlcnJvck1lc3NhZ2UpID0+IHtcbiAgICBjb25zdCBlcnJvckVsZW1lbnQgPSB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3IoYC4ke2lucHV0RWxlbWVudC5pZH0tZXJyb3JgKTtcbiAgICBpbnB1dEVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9zZXR0aW5ncy5pbnB1dEVycm9yQ2xhc3MpO1xuICAgIGVycm9yRWxlbWVudC50ZXh0Q29udGVudCA9IGVycm9yTWVzc2FnZTtcbiAgICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9zZXR0aW5ncy5lcnJvckNsYXNzKTtcbiAgfTtcblxuICBfaGlkZUlucHV0RXJyb3IgPSAoaW5wdXRFbGVtZW50KSA9PiB7XG4gICAgY29uc3QgZXJyb3JFbGVtZW50ID0gdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yKGAuJHtpbnB1dEVsZW1lbnQuaWR9LWVycm9yYCk7XG4gICAgaW5wdXRFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fc2V0dGluZ3MuaW5wdXRFcnJvckNsYXNzKTtcbiAgICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9zZXR0aW5ncy5lcnJvckNsYXNzKTtcbiAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSBcIlwiO1xuICB9O1xuXG4gIF9jaGVja0lucHV0VmFsaWRpdHkgPSAoaW5wdXRFbGVtZW50KSA9PiB7XG4gICAgaWYgKCFpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQpIHtcbiAgICAgIHRoaXMuX3Nob3dJbnB1dEVycm9yKGlucHV0RWxlbWVudCwgaW5wdXRFbGVtZW50LnZhbGlkYXRpb25NZXNzYWdlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KTtcbiAgICB9XG4gIH07XG5cbiAgX2hhc0ludmFsaWRJbnB1dCA9ICgpID0+IHtcbiAgICByZXR1cm4gdGhpcy5faW5wdXRMaXN0LnNvbWUoKGlucHV0RWxlbWVudCkgPT4ge1xuICAgICAgcmV0dXJuICFpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQ7XG4gICAgfSk7XG4gIH07XG5cbiAgX3RvZ2dsZUJ1dHRvblN0YXRlID0gKCkgPT4ge1xuICAgIGlmICh0aGlzLl9oYXNJbnZhbGlkSW5wdXQodGhpcy5faW5wdXRMaXN0KSkge1xuICAgICAgdGhpcy5fYnV0dG9uRWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX3NldHRpbmdzLmluYWN0aXZlQnV0dG9uQ2xhc3MpO1xuICAgICAgdGhpcy5fYnV0dG9uRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJkaXNhYmxlZFwiLCB0cnVlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5fYnV0dG9uRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX3NldHRpbmdzLmluYWN0aXZlQnV0dG9uQ2xhc3MpO1xuICAgICAgdGhpcy5fYnV0dG9uRWxlbWVudC5yZW1vdmVBdHRyaWJ1dGUoXCJkaXNhYmxlZFwiKTtcbiAgICB9XG4gIH07XG5cbiAgcmVzZXRWYWxpZGF0aW9uKCkge1xuICAgIHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKCk7IFxuXG4gICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGlucHV0RWxlbWVudCkgPT4ge1xuICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KSBcbiAgICB9KTtcbiAgfVxuXG4gIF9zZXRFdmVudExpc3RlbmVycyA9ICgpID0+IHtcbiAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaCgoaW5wdXRFbGVtZW50KSA9PiB7XG4gICAgICBpbnB1dEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImlucHV0XCIsICgpID0+IHtcbiAgICAgICAgdGhpcy5fY2hlY2tJbnB1dFZhbGlkaXR5KGlucHV0RWxlbWVudCk7XG4gICAgICAgIHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKHRoaXMuX2lucHV0TGlzdCwgdGhpcy5fYnV0dG9uRWxlbWVudCk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfTtcblxuICBlbmFibGVWYWxpZGF0aW9uID0gKCkgPT4ge1xuICAgICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgfTtcbn1cbiIsImV4cG9ydCBjbGFzcyBQb3B1cCB7XG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IpIHtcbiAgICB0aGlzLl9wb3B1cCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IocG9wdXBTZWxlY3Rvcik7XG4gICAgdGhpcy5faGFuZGxlRXNjQ2xvc2UgPSB0aGlzLl9oYW5kbGVFc2NDbG9zZS5iaW5kKHRoaXMpO1xuICAgIHRoaXMuX2hhbmRsZUNsaWNrT3V0c2lkZUNsb3NlID0gdGhpcy5faGFuZGxlQ2xpY2tPdXRzaWRlQ2xvc2UuYmluZCh0aGlzKTtcbiAgICB0aGlzLl9zdWJtaXRCdXR0b24gPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2J1dHRvbicpXG4gIH1cblxuICBvcGVuKCkge1xuICAgIHRoaXMuX3BvcHVwLmNsYXNzTGlzdC5hZGQoXCJwb3B1cF9hY3RpdmVcIik7XG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5faGFuZGxlRXNjQ2xvc2UpO1xuICB9XG5cbiAgY2xvc2UoKSB7XG4gICAgdGhpcy5fcG9wdXAuY2xhc3NMaXN0LnJlbW92ZShcInBvcHVwX2FjdGl2ZVwiKTtcbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XG4gIH1cblxuICByZW5kZXJMb2FkaW5nKGlzTG9hZGluZywgdGV4dCkge1xuICAgIGlmIChpc0xvYWRpbmcpIHtcbiAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi50ZXh0Q29udGVudCA9IHRleHQ7XG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b24uc3R5bGUucG9pbnRlckV2ZW50cyA9IFwibm9uZVwiXG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgdGhpcy5fc3VibWl0QnV0dG9uLnRleHRDb250ZW50ID0gdGV4dDtcbiAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5yZW1vdmVBdHRyaWJ1dGUoJ3N0eWxlJylcbiAgICB9IFxuICB9XG5cbiAgX2hhbmRsZUVzY0Nsb3NlKGV2ZW50KSB7XG4gICAgaWYgKGV2ZW50LmtleSA9PT0gXCJFc2NhcGVcIikge1xuICAgICAgdGhpcy5jbG9zZSgpO1xuICAgIH1cbiAgfVxuXG4gIF9oYW5kbGVDbGlja091dHNpZGVDbG9zZShldmVudCkge1xuICAgIGlmIChldmVudC50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKFwicG9wdXBfYWN0aXZlXCIpKSB7XG4gICAgICB0aGlzLmNsb3NlKCk7XG4gICAgfVxuICAgIGlmIChldmVudC50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKFwicG9wdXBfX2Nsb3NlLWJ1dHRvblwiKSkge1xuICAgICAgdGhpcy5jbG9zZSgpO1xuICAgIH1cbiAgfVxuXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHRoaXMuX3BvcHVwLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZWRvd25cIiwgdGhpcy5faGFuZGxlQ2xpY2tPdXRzaWRlQ2xvc2UpO1xuICB9XG59XG4iLCJpbXBvcnQgeyBQb3B1cCB9IGZyb20gXCIuL1BvcHVwLmpzXCI7XG5cbmV4cG9ydCBjbGFzcyBQb3B1cFdpdGhGb3JtIGV4dGVuZHMgUG9wdXAge1xuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yLCBoYW5kbGVGb3JtU3VibWl0KSB7XG4gICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XG4gICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdCA9IGhhbmRsZUZvcm1TdWJtaXQ7XG4gICAgdGhpcy5faW5wdXRMaXN0ID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvckFsbChcIi5wb3B1cF9faW5wdXRcIik7XG4gIH1cblxuICBnZXRJbnB1dFZhbHVlcygpIHtcbiAgICB0aGlzLl9mb3JtVmFsdWVzID0ge307XG5cbiAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaCgoaW5wdXQpID0+IHtcbiAgICAgIHRoaXMuX2Zvcm1WYWx1ZXNbaW5wdXQubmFtZV0gPSBpbnB1dC52YWx1ZTtcbiAgICB9KTtcblxuICAgIHJldHVybiB0aGlzLl9mb3JtVmFsdWVzO1xuICB9XG5cbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgICB0aGlzLl9mb3JtID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fZm9ybVwiKTtcbiAgICB0aGlzLl9mb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGV2dCkgPT4ge1xuICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICBcbiAgICAgIHRoaXMucmVuZGVyTG9hZGluZyh0cnVlLCAn0KHQvtGF0YDQsNC90LXQvdC40LUuLi4nKVxuICAgIFxuICAgICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdCh0aGlzLmdldElucHV0VmFsdWVzKCkpO1xuICAgIH0pO1xuICB9XG5cbiAgY2xvc2UoKSB7XG4gICAgc3VwZXIuY2xvc2UoKTtcbiAgICB0aGlzLl9mb3JtLnJlc2V0KCk7XG4gIH1cbn1cbiIsImltcG9ydCB7IFBvcHVwIH0gZnJvbSBcIi4vUG9wdXAuanNcIjtcblxuZXhwb3J0IGNsYXNzIFBvcHVwV2l0aEltYWdlIGV4dGVuZHMgUG9wdXAge1xuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XG4gICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XG4gICAgdGhpcy5faW1hZ2UgPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKFwiLnBsYWNlLWluc3BlY3Rvcl9faW1hZ2VcIik7XG4gICAgdGhpcy5fbmFtZSA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoXCIucGxhY2UtaW5zcGVjdG9yX19uYW1lXCIpO1xuICB9XG5cbiAgb3BlbihuYW1lLCBsaW5rKSB7XG4gICAgc3VwZXIub3BlbigpO1xuICAgIHRoaXMuX2ltYWdlLmFsdCA9IG5hbWU7XG4gICAgdGhpcy5faW1hZ2Uuc3JjID0gbGluaztcbiAgICB0aGlzLl9uYW1lLnRleHRDb250ZW50ID0gbmFtZTtcbiAgfVxufVxuIiwiaW1wb3J0IHsgUG9wdXAgfSBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xuXG5leHBvcnQgY2xhc3MgUG9wdXBXaXRoQ29uZmlybWF0aW9uIGV4dGVuZHMgUG9wdXAge1xuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yLCBoYW5kbGVDb25maXJtYXRpb24pIHtcbiAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcbiAgICB0aGlzLl9jb25maXJtRGVsZXRlQnV0dG9uID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcihcbiAgICAgIFwiLnBvcHVwX19kZWxldGUtcGxhY2UtYnV0dG9uXCJcbiAgICApO1xuICAgIHRoaXMuX2hhbmRsZUNvbmZpcm1hdGlvbiA9IGhhbmRsZUNvbmZpcm1hdGlvbjtcbiAgfVxuXG4gIG9wZW4ocmVtb3ZpbmdDYXJkLCBjYXJkSWQpIHtcbiAgICBzdXBlci5vcGVuKCk7XG4gICAgdGhpcy5fcmVtb3ZpbmdDYXJkID0gcmVtb3ZpbmdDYXJkO1xuICAgIHRoaXMuX2NhcmRJZCA9IGNhcmRJZDtcbiAgfVxuXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XG4gICAgdGhpcy5fZm9ybSA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2Zvcm1cIik7XG4gICAgdGhpcy5fZm9ybS5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChldnQpID0+IHtcblxuICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICAgIGNvbnN0IHByb21pc2UgPSB0aGlzLl9oYW5kbGVDb25maXJtYXRpb24oXG4gICAgICAgIHRoaXMuX3JlbW92aW5nQ2FyZCxcbiAgICAgICAgdGhpcy5fY2FyZElkXG4gICAgICApO1xuICAgICAgcHJvbWlzZS50aGVuKCgpID0+IHtcbiAgICAgICAgdGhpcy5jbG9zZSgpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cbn1cbiIsImV4cG9ydCBjbGFzcyBVc2VySW5mbyB7XG4gIGNvbnN0cnVjdG9yKGRhdGEpIHtcbiAgICB0aGlzLl9uYW1lID0gZGF0YS5wcm9maWxlTmFtZTtcbiAgICB0aGlzLl9hYm91dCA9IGRhdGEucHJvZmlsZUFib3V0O1xuICAgIHRoaXMuX2F2YXRhciA9IGRhdGEucHJvZmlsZUF2YXRhcjtcbiAgfVxuXG4gIGdldFVzZXJJbmZvKCkge1xuICAgIHJldHVybiB7XG4gICAgICBuYW1lOiB0aGlzLl9uYW1lLnRleHRDb250ZW50LFxuICAgICAgYWJvdXQ6IHRoaXMuX2Fib3V0LnRleHRDb250ZW50LFxuICAgICAgYXZhdGFyOiB0aGlzLl9hdmF0YXIuc3JjLFxuICAgIH07XG4gIH1cblxuICBnZXRJZCgpIHtcbiAgICByZXR1cm4gdGhpcy5faWQ7XG4gIH1cblxuICBzZXRJZChpZCkge1xuICAgIHRoaXMuX2lkID0gaWQ7XG4gIH1cblxuICBnZXRVc2VyRGF0YShkYXRhKSB7XG4gICAgdGhpcy5fbmFtZS50ZXh0Q29udGVudCA9IGRhdGEubmFtZTtcbiAgICB0aGlzLl9hYm91dC50ZXh0Q29udGVudCA9IGRhdGEuYWJvdXQ7XG4gICAgdGhpcy5fYXZhdGFyLnNyYyA9IGRhdGEuYXZhdGFyO1xuICB9XG5cbiAgc2V0VXNlckluZm8oZGF0YSkge1xuICAgIHRoaXMuX25hbWUudGV4dENvbnRlbnQgPSBkYXRhW1wibmFtZS1pbnB1dFwiXTtcbiAgICB0aGlzLl9hYm91dC50ZXh0Q29udGVudCA9IGRhdGFbXCJhYm91dC1pbnB1dFwiXTtcbiAgfVxuXG4gIHNldFVzZXJBdmF0YXIoZGF0YSkge1xuICAgIHRoaXMuX2F2YXRhci5zcmMgPSBkYXRhW1wibmV3LWF2YXRhci1saW5rLWlucHV0XCJdO1xuICB9XG59XG4iLCJleHBvcnQgY2xhc3MgU2VjdGlvbiB7XG4gIGNvbnN0cnVjdG9yKHsgcmVuZGVyZXIgfSwgY29udGFpbmVyKSB7XG4gICAgdGhpcy5fcmVuZGVyZXIgPSByZW5kZXJlcjtcbiAgICB0aGlzLl9jb250YWluZXIgPSBjb250YWluZXI7XG4gIH1cblxuICBhZGRJdGVtKGl0ZW0pIHtcbiAgICB0aGlzLl9jb250YWluZXIucHJlcGVuZChpdGVtKTtcbiAgfVxuXG4gIHJlbmRlckl0ZW1zKGl0ZW1zKSB7XG4gICAgaXRlbXMuZm9yRWFjaCgoaXRlbSkgPT4ge1xuICAgICAgdGhpcy5fcmVuZGVyZXIoaXRlbSk7XG4gICAgfSk7XG4gIH1cbn1cbiIsImV4cG9ydCBjbGFzcyBBcGkge1xuICBjb25zdHJ1Y3Rvcihjb25maWcpIHtcbiAgICB0aGlzLl9zZXJ2ZXJVcmwgPSBjb25maWcuc2VydmVyVXJsO1xuICAgIHRoaXMuX2hlYWRlcnMgPSBjb25maWcuaGVhZGVycztcbiAgfVxuXG4gIF9jaGVja1Jlc3BvbnNlKHJlcykge1xuICAgIGlmIChyZXMub2spIHtcbiAgICAgIHJldHVybiByZXMuanNvbigpO1xuICAgIH1cblxuICAgIHJldHVybiBQcm9taXNlLnJlamVjdChg0J7RiNC40LHQutCwINC30LDQs9GA0YPQt9C60Lgg0LTQsNC90L3Ri9GFOiAke3Jlcy5zdGF0dXN9YCk7XG4gIH1cblxuICBnZXRQbGFjZUNhcmRzKCkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9zZXJ2ZXJVcmx9L2NhcmRzYCwge1xuICAgICAgbWV0aG9kOiBcIkdFVFwiLFxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcbiAgICB9KS50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2UpO1xuICB9XG5cbiAgZ2V0UHJvZmlsZURhdGEoKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX3NlcnZlclVybH0vdXNlcnMvbWVgLCB7XG4gICAgICBtZXRob2Q6IFwiR0VUXCIsXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgIH0pLnRoZW4odGhpcy5fY2hlY2tSZXNwb25zZSk7XG4gIH1cblxuICBlZGl0UHJvZmlsZShkYXRhKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX3NlcnZlclVybH0vdXNlcnMvbWVgLCB7XG4gICAgICBtZXRob2Q6IFwiUEFUQ0hcIixcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgIG5hbWU6IGRhdGFbXCJuYW1lLWlucHV0XCJdLFxuICAgICAgICBhYm91dDogZGF0YVtcImFib3V0LWlucHV0XCJdLFxuICAgICAgfSksXG4gICAgfSkudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKTtcbiAgfVxuXG4gIGVkaXRBdmF0YXIoZGF0YSkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9zZXJ2ZXJVcmx9L3VzZXJzL21lL2F2YXRhcmAsIHtcbiAgICAgIG1ldGhvZDogXCJQQVRDSFwiLFxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgYXZhdGFyOiBkYXRhW1wibmV3LWF2YXRhci1saW5rLWlucHV0XCJdLFxuICAgICAgfSksXG4gICAgfSkudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKTtcbiAgfVxuXG4gIGFkZFBsYWNlQ2FyZChkYXRhKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX3NlcnZlclVybH0vY2FyZHNgLCB7XG4gICAgICBtZXRob2Q6IFwiUE9TVFwiLFxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgbmFtZTogZGF0YVtcInBsYWNlLW5hbWUtaW5wdXRcIl0sXG4gICAgICAgIGxpbms6IGRhdGFbXCJwbGFjZS1saW5rLWlucHV0XCJdLFxuICAgICAgfSksXG4gICAgfSkudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKTtcbiAgfVxuXG4gIGRlbGV0ZVBsYWNlQ2FyZChjYXJkSWQpIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fc2VydmVyVXJsfS9jYXJkcy8ke2NhcmRJZH1gLCB7XG4gICAgICBtZXRob2Q6IFwiREVMRVRFXCIsXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgIH0pLnRoZW4odGhpcy5fY2hlY2tSZXNwb25zZSk7XG4gIH1cblxuICBzZXRMaWtlKGNhcmRJZCkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9zZXJ2ZXJVcmx9L2NhcmRzLyR7Y2FyZElkfS9saWtlc2AsIHtcbiAgICAgIG1ldGhvZDogXCJQVVRcIixcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgfSkudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKTtcbiAgfVxuXG4gIHJlbW92ZUxpa2UoY2FyZElkKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX3NlcnZlclVybH0vY2FyZHMvJHtjYXJkSWR9L2xpa2VzYCwge1xuICAgICAgbWV0aG9kOiBcIkRFTEVURVwiLFxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcbiAgICB9KS50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2UpO1xuICB9XG59XG4iLCJjb25zdCBlbmFibGVWYWxpZGF0aW9uT2JqID0ge1xuICBmb3JtU2VsZWN0b3I6IFwiLnBvcHVwX19mb3JtXCIsXG4gIGlucHV0U2VsZWN0b3I6IFwiLnBvcHVwX19pbnB1dFwiLFxuICBzdWJtaXRCdXR0b25TZWxlY3RvcjogXCIucG9wdXBfX2J1dHRvblwiLFxuICBpbmFjdGl2ZUJ1dHRvbkNsYXNzOiBcInBvcHVwX19idXR0b25fZGlzYWJsZWRcIixcbiAgaW5wdXRFcnJvckNsYXNzOiBcInBvcHVwX19pbnB1dF90eXBlX2Vycm9yXCIsXG4gIGVycm9yQ2xhc3M6IFwicG9wdXBfX2lucHV0LWVycm9yX3Zpc2libGVcIixcbiAgY2xvc2VCdXR0b246IFwiLnBvcHVwX19jbG9zZS1idXR0b25cIixcbn07XG5cbmNvbnN0IHByb2ZpbGVOYW1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19uYW1lXCIpO1xuY29uc3QgcHJvZmlsZUFib3V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19kZXNjcmlwdGlvblwiKTtcbmNvbnN0IHByb2ZpbGVFZGl0QnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19lZGl0LWJ1dHRvblwiKTtcbmNvbnN0IHBsYWNlQWRkQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19wbGFjZS1hZGQtYnV0dG9uXCIpO1xuY29uc3QgcGxhY2VzTGlzdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucGxhY2VzX19saXN0XCIpO1xuY29uc3QgbmFtZUlucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9faW5wdXRfcHJvZmlsZV9uYW1lXCIpO1xuY29uc3QgYWJvdXRJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2lucHV0X3Byb2ZpbGVfYWJvdXRcIik7XG5jb25zdCBhdmF0YXJDaGFuZ2VCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2F2YXRhci1idXR0b25cIik7XG5jb25zdCBwcm9maWxlQXZhdGFyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19hdmF0YXJcIik7XG5cbmV4cG9ydCB7XG4gIGVuYWJsZVZhbGlkYXRpb25PYmosXG4gIHByb2ZpbGVOYW1lLFxuICBwcm9maWxlQWJvdXQsXG4gIHBsYWNlQWRkQnV0dG9uLFxuICBwcm9maWxlRWRpdEJ1dHRvbixcbiAgbmFtZUlucHV0LFxuICBhYm91dElucHV0LFxuICBwbGFjZXNMaXN0LFxuICBhdmF0YXJDaGFuZ2VCdXR0b24sXG4gIHByb2ZpbGVBdmF0YXIsXG59O1xuIiwiaW1wb3J0IHsgQ2FyZCB9IGZyb20gXCIuLi9zY3JpcHRzL2NvbXBvbmVudHMv0KFhcmQuanNcIjtcbmltcG9ydCB7IEZvcm1WYWxpZGF0b3IgfSBmcm9tIFwiLi4vc2NyaXB0cy9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanNcIjtcbmltcG9ydCB7IFBvcHVwV2l0aEZvcm0gfSBmcm9tIFwiLi4vc2NyaXB0cy9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanNcIjtcbmltcG9ydCB7IFBvcHVwV2l0aEltYWdlIH0gZnJvbSBcIi4uL3NjcmlwdHMvY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qc1wiO1xuaW1wb3J0IHsgUG9wdXBXaXRoQ29uZmlybWF0aW9uIH0gZnJvbSBcIi4uL3NjcmlwdHMvY29tcG9uZW50cy9Qb3B1cFdpdGhDb25maXJtYXRpb24uanNcIjtcbmltcG9ydCB7IFVzZXJJbmZvIH0gZnJvbSBcIi4uL3NjcmlwdHMvY29tcG9uZW50cy9Vc2VySW5mby5qc1wiO1xuaW1wb3J0IHsgU2VjdGlvbiB9IGZyb20gXCIuLi9zY3JpcHRzL2NvbXBvbmVudHMvU2VjdGlvbi5qc1wiO1xuaW1wb3J0IHsgQXBpIH0gZnJvbSBcIi4uL3NjcmlwdHMvY29tcG9uZW50cy9BcGkuanNcIjtcbmltcG9ydCB7XG4gIGVuYWJsZVZhbGlkYXRpb25PYmosXG4gIHByb2ZpbGVOYW1lLFxuICBwcm9maWxlQWJvdXQsXG4gIHByb2ZpbGVBdmF0YXIsXG4gIHBsYWNlc0xpc3QsXG4gIHBsYWNlQWRkQnV0dG9uLFxuICBwcm9maWxlRWRpdEJ1dHRvbixcbiAgbmFtZUlucHV0LFxuICBhYm91dElucHV0LFxuICBhdmF0YXJDaGFuZ2VCdXR0b24sXG59IGZyb20gXCIuLi9zY3JpcHRzL3V0aWxzL2NvbnN0YW50cy5qc1wiO1xuXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cblxuY29uc3QgZm9ybVZhbGlkYXRvcnMgPSB7fTtcblxuY29uc3QgZW5hYmxlVmFsaWRhdGlvbiA9IChjb25maWcpID0+IHtcbiAgY29uc3QgZm9ybUxpc3QgPSBBcnJheS5mcm9tKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoY29uZmlnLmZvcm1TZWxlY3RvcikpO1xuICBmb3JtTGlzdC5mb3JFYWNoKChmb3JtRWxlbWVudCkgPT4ge1xuICAgIGNvbnN0IHZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKGNvbmZpZywgZm9ybUVsZW1lbnQpO1xuICAgIGNvbnN0IGZvcm1OYW1lID0gZm9ybUVsZW1lbnQuZ2V0QXR0cmlidXRlKFwibmFtZVwiKTtcblxuICAgIGZvcm1WYWxpZGF0b3JzW2Zvcm1OYW1lXSA9IHZhbGlkYXRvcjtcbiAgICB2YWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpO1xuICB9KTtcbn07XG5cbmVuYWJsZVZhbGlkYXRpb24oZW5hYmxlVmFsaWRhdGlvbk9iaik7XG5cbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuXG5jb25zdCBjb25maWcgPSB7XG4gIHNlcnZlclVybDogXCJodHRwczovL21lc3RvLm5vbW9yZXBhcnRpZXMuY28vdjEvY29ob3J0LTQ2XCIsXG4gIGhlYWRlcnM6IHtcbiAgICBhdXRob3JpemF0aW9uOiBcImQ1MGQxNzlhLWU2OGUtNDhjZC05ZjY0LTY0NWMwYmZlODQwOVwiLFxuICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICB9LFxufTtcblxuY29uc3QgYXBpID0gbmV3IEFwaShjb25maWcpO1xuXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cblxuY29uc3QgdXNlckRhdGEgPSBuZXcgVXNlckluZm8oeyBwcm9maWxlTmFtZSwgcHJvZmlsZUFib3V0LCBwcm9maWxlQXZhdGFyIH0pO1xuXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cblxuZnVuY3Rpb24gY3JlYXRlQ2FyZChkYXRhKSB7XG4gIGNvbnN0IGNhcmQgPSBuZXcgQ2FyZChcbiAgICBkYXRhLFxuICAgIFwiLnBsYWNlLXRlbXBsYXRlXCIsXG4gICAgdXNlckRhdGEuZ2V0SWQoKSxcbiAgICB7XG4gICAgICBoYW5kbGVDYXJkQ2xpY2s6IChuYW1lLCBsaW5rKSA9PiB7XG4gICAgICAgIHBvcHVwUGxhY2VJbnNwZWN0b3Iub3BlbihuYW1lLCBsaW5rKTtcbiAgICAgICAgXG4gICAgICAgIHBvcHVwUGxhY2VJbnNwZWN0b3Iuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgICAgIH0sXG4gICAgICBoYW5kbGVMaWtlQ2xpY2s6IChjYXJkSWQpID0+IHtcbiAgICAgICAgaWYgKGNhcmQubGlrZUlzQWN0aXZlKSB7XG4gICAgICAgICAgYXBpXG4gICAgICAgICAgLnJlbW92ZUxpa2UoY2FyZElkKVxuICAgICAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgICAgIGNhcmQuZGVsZXRlTGlrZSgpO1xuICAgICAgICAgIH0pXG4gICAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgYXBpXG4gICAgICAgICAgLnNldExpa2UoY2FyZElkKVxuICAgICAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgICAgIGNhcmQuYWRkTGlrZSgpO1xuICAgICAgICAgIH0pXG4gICAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBoYW5kbGVEZWxldGVJY29uQ2xpY2s6IChyZW1vdmluZ0NhcmQpID0+IHtcbiAgICAgICAgcG9wdXBEZWxldGVDYXJkQ29uZmlybWF0aW9uLm9wZW4ocmVtb3ZpbmdDYXJkLCByZW1vdmluZ0NhcmQuaWQpO1xuXG4gICAgICAgIHBvcHVwRGVsZXRlQ2FyZENvbmZpcm1hdGlvbi5zZXRFdmVudExpc3RlbmVycygpOyBcbiAgICAgIH0sXG4gICAgfVxuICApO1xuICBjb25zdCBjYXJkRWxlbWVudCA9IGNhcmQuZ2VuZXJhdGVDYXJkKCk7XG4gIHJldHVybiBjYXJkRWxlbWVudDtcbn1cblxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG5cbmNvbnN0IHBsYWNlc0dyaWQgPSBuZXcgU2VjdGlvbihcbiAgeyBcbiAgICByZW5kZXJlcjogKGNhcmQpID0+IHtcbiAgICAgIGNvbnN0IGNhcmRFbGVtZW50ID0gY3JlYXRlQ2FyZChjYXJkKTtcbiAgICAgIHBsYWNlc0dyaWQuYWRkSXRlbShjYXJkRWxlbWVudCk7XG4gICAgfSxcbiAgfSxcbiAgcGxhY2VzTGlzdFxuKTtcblxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG5cblxuUHJvbWlzZS5hbGwoWyBcbiAgYXBpLmdldFByb2ZpbGVEYXRhKCksXG4gIGFwaS5nZXRQbGFjZUNhcmRzKClcbl0pXG4udGhlbigoW2RhdGEsIGNhcmRzXSkgPT4geyBcblxuICB1c2VyRGF0YS5nZXRVc2VyRGF0YShkYXRhKVxuICB1c2VyRGF0YS5zZXRJZChkYXRhLl9pZCk7XG5cbnBsYWNlc0dyaWQucmVuZGVySXRlbXMoY2FyZHMucmV2ZXJzZSgpKTtcblxufSlcbi5jYXRjaCgoZXJyKSA9PiB7XG4gIGNvbnNvbGUubG9nKGVycik7XG59KSBcblxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG5cbmNvbnN0IHBvcHVwUGxhY2VJbnNwZWN0b3IgPSBuZXcgUG9wdXBXaXRoSW1hZ2UoXCIucG9wdXBfcGxhY2UtaW5zcGVjdG9yXCIpO1xuXG5jb25zdCBwb3B1cERlbGV0ZUNhcmRDb25maXJtYXRpb24gPSBuZXcgUG9wdXBXaXRoQ29uZmlybWF0aW9uKFxuICBcIi5wb3B1cF90eXBlX2RlbGV0ZS1wbGFjZS1jYXJkXCIsXG4gIChyZW1vdmluZ0NhcmQsIGNhcmRJZCkgPT5cbiAgICBhcGlcbiAgICAgIC5kZWxldGVQbGFjZUNhcmQoY2FyZElkKVxuICAgICAgLnRoZW4oKCkgPT4ge1xuICAgICAgICByZW1vdmluZ0NhcmQucmVtb3ZlKCk7XG4gICAgICB9KVxuICAgICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgIH0pXG4pO1xuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG5cbmNvbnN0IHBvcHVwRWRpdFByb2ZpbGUgPSBuZXcgUG9wdXBXaXRoRm9ybShcIi5wb3B1cF90eXBlX3Byb2ZpbGUtZWRpdFwiLCAoKSA9PiB7XG4gIGNvbnN0IGRhdGEgPSBwb3B1cEVkaXRQcm9maWxlLmdldElucHV0VmFsdWVzKCk7XG4gIGFwaVxuICAgIC5lZGl0UHJvZmlsZShkYXRhKVxuICAgIC50aGVuKCgpID0+IHtcbiAgICAgIHVzZXJEYXRhLnNldFVzZXJJbmZvKGRhdGEpO1xuICAgICAgcG9wdXBFZGl0UHJvZmlsZS5jbG9zZSgpO1xuICAgIH0pXG4gICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgfSlcbiAgICAuZmluYWxseSgoKSA9PiB7XG4gICAgICBwb3B1cEVkaXRQcm9maWxlLnJlbmRlckxvYWRpbmcoZmFsc2UsIFwi0KHQvtGF0YDQsNC90LjRgtGMXCIpO1xuICAgIH0pO1xufSk7XG5cbnBvcHVwRWRpdFByb2ZpbGUuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxucHJvZmlsZUVkaXRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgcG9wdXBFZGl0UHJvZmlsZS5vcGVuKCk7XG4gIGNvbnN0IGN1cnJlbnRVc2VyRGF0YSA9IHVzZXJEYXRhLmdldFVzZXJJbmZvKCk7XG5cbiAgbmFtZUlucHV0LnZhbHVlID0gY3VycmVudFVzZXJEYXRhLm5hbWU7XG4gIGFib3V0SW5wdXQudmFsdWUgPSBjdXJyZW50VXNlckRhdGEuYWJvdXQ7XG5cbiAgZm9ybVZhbGlkYXRvcnNbXCJwcm9maWxlLWZvcm1cIl0ucmVzZXRWYWxpZGF0aW9uKCk7XG59KTtcblxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG5cbmNvbnN0IHBvcHVwRWRpdEF2YXRhciA9IG5ldyBQb3B1cFdpdGhGb3JtKFwiLnBvcHVwX3R5cGVfY2hhbmdlLWF2YXRhclwiLCAoKSA9PiB7XG4gIGNvbnN0IGRhdGEgPSBwb3B1cEVkaXRBdmF0YXIuZ2V0SW5wdXRWYWx1ZXMoKTtcbiAgYXBpXG4gICAgLmVkaXRBdmF0YXIoZGF0YSlcbiAgICAudGhlbigoKSA9PiB7XG4gICAgICB1c2VyRGF0YS5zZXRVc2VyQXZhdGFyKGRhdGEpO1xuICAgICAgcG9wdXBFZGl0QXZhdGFyLmNsb3NlKCk7XG4gICAgfSlcbiAgICAuY2F0Y2goKGVycikgPT4ge1xuICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICB9KVxuICAgIC5maW5hbGx5KCgpID0+IHtcbiAgICAgIHBvcHVwRWRpdEF2YXRhci5yZW5kZXJMb2FkaW5nKGZhbHNlLCBcItCh0L7RhdGA0LDQvdC40YLRjFwiKTtcbiAgICB9KTtcbn0pO1xuXG5wb3B1cEVkaXRBdmF0YXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxuYXZhdGFyQ2hhbmdlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gIHBvcHVwRWRpdEF2YXRhci5vcGVuKCk7XG4gIGZvcm1WYWxpZGF0b3JzW1wiY2hhbmdlLWF2YXRhci1mb3JtXCJdLnJlc2V0VmFsaWRhdGlvbigpO1xufSk7XG5cbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuXG5jb25zdCBwb3B1cFBsYWNlQWRkID0gbmV3IFBvcHVwV2l0aEZvcm0oXCIucG9wdXBfdHlwZV9wbGFjZS1hZGRcIiwgKCkgPT4ge1xuICBjb25zdCBkYXRhID0gcG9wdXBQbGFjZUFkZC5nZXRJbnB1dFZhbHVlcygpO1xuICBhcGlcbiAgICAuYWRkUGxhY2VDYXJkKGRhdGEpXG4gICAgLnRoZW4oKGNhcmQpID0+IHtcbiAgICAgIGNvbnN0IGNhcmRFbGVtZW50ID0gY3JlYXRlQ2FyZChjYXJkKTtcbiAgICAgIHBsYWNlc0dyaWQuYWRkSXRlbShjYXJkRWxlbWVudCk7XG4gICAgICBcbiAgICAgIHBvcHVwUGxhY2VBZGQuY2xvc2UoKTtcbiAgICB9KVxuICAgIC5jYXRjaCgoZXJyKSA9PiB7XG4gICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgIH0pXG4gICAgLmZpbmFsbHkoKCkgPT4ge1xuICAgICAgcG9wdXBQbGFjZUFkZC5yZW5kZXJMb2FkaW5nKGZhbHNlLCBcItCh0L7Qt9C00LDRgtGMXCIpO1xuICAgIH0pO1xufSk7XG5cbnBvcHVwUGxhY2VBZGQuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxucGxhY2VBZGRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgcG9wdXBQbGFjZUFkZC5vcGVuKCk7XG4gIGZvcm1WYWxpZGF0b3JzW1wicGxhY2UtYWRkLWZvcm1cIl0ucmVzZXRWYWxpZGF0aW9uKCk7XG59KTtcblxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4iXSwibmFtZXMiOlsiQ2FyZCIsImRhdGEiLCJjYXJkU2VsZWN0b3IiLCJjdXJyZW50VXNlcklkIiwiaGFuZGxlQ2FyZENsaWNrIiwiaGFuZGxlTGlrZUNsaWNrIiwiaGFuZGxlRGVsZXRlSWNvbkNsaWNrIiwidGhpcyIsIl9uYW1lIiwibmFtZSIsIl9saW5rIiwibGluayIsIl9pZCIsIl9vd25lcklkIiwib3duZXIiLCJfY3VycmVudFVzZXJJZCIsIl9jYXJkU2VsZWN0b3IiLCJfaGFuZGxlQ2FyZENsaWNrIiwiX2hhbmRsZUxpa2VDbGljayIsIl9oYW5kbGVEZWxldGVJY29uQ2xpY2siLCJfbGlrZUNvdW50ZXIiLCJsaWtlcyIsImxlbmd0aCIsIl9saWtlcyIsImxpa2VCdXR0b24iLCJjbGFzc0xpc3QiLCJhZGQiLCJsaWtlSXNBY3RpdmUiLCJ0ZXh0Q29udGVudCIsInJlbW92ZSIsIl9lbGVtZW50IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiY29udGVudCIsImNsb25lTm9kZSIsIl9kZWxldGVCdXR0b24iLCJfcGhvdG8iLCJhZGRFdmVudExpc3RlbmVyIiwiX2dldFRlbXBsYXRlIiwiX3NldEV2ZW50TGlzdGVuZXJzIiwicGxhY2VOYW1lIiwicGxhY2VMaW5rIiwiaWQiLCJhbHQiLCJzcmMiLCJzb21lIiwidXNlciIsIkZvcm1WYWxpZGF0b3IiLCJzZXR0aW5ncyIsImZvcm0iLCJpbnB1dEVsZW1lbnQiLCJlcnJvck1lc3NhZ2UiLCJlcnJvckVsZW1lbnQiLCJfZm9ybSIsIl9zZXR0aW5ncyIsImlucHV0RXJyb3JDbGFzcyIsImVycm9yQ2xhc3MiLCJ2YWxpZGl0eSIsInZhbGlkIiwiX2hpZGVJbnB1dEVycm9yIiwiX3Nob3dJbnB1dEVycm9yIiwidmFsaWRhdGlvbk1lc3NhZ2UiLCJfaW5wdXRMaXN0IiwiX2hhc0ludmFsaWRJbnB1dCIsIl9idXR0b25FbGVtZW50IiwiaW5hY3RpdmVCdXR0b25DbGFzcyIsInNldEF0dHJpYnV0ZSIsInJlbW92ZUF0dHJpYnV0ZSIsImZvckVhY2giLCJfY2hlY2tJbnB1dFZhbGlkaXR5IiwiX3RvZ2dsZUJ1dHRvblN0YXRlIiwiQXJyYXkiLCJmcm9tIiwicXVlcnlTZWxlY3RvckFsbCIsImlucHV0U2VsZWN0b3IiLCJzdWJtaXRCdXR0b25TZWxlY3RvciIsIlBvcHVwIiwicG9wdXBTZWxlY3RvciIsIl9wb3B1cCIsIl9oYW5kbGVFc2NDbG9zZSIsImJpbmQiLCJfaGFuZGxlQ2xpY2tPdXRzaWRlQ2xvc2UiLCJfc3VibWl0QnV0dG9uIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImlzTG9hZGluZyIsInRleHQiLCJzdHlsZSIsInBvaW50ZXJFdmVudHMiLCJldmVudCIsImtleSIsImNsb3NlIiwidGFyZ2V0IiwiY29udGFpbnMiLCJQb3B1cFdpdGhGb3JtIiwiaGFuZGxlRm9ybVN1Ym1pdCIsIl9oYW5kbGVGb3JtU3VibWl0IiwiX2Zvcm1WYWx1ZXMiLCJpbnB1dCIsInZhbHVlIiwiZXZ0IiwicHJldmVudERlZmF1bHQiLCJyZW5kZXJMb2FkaW5nIiwiZ2V0SW5wdXRWYWx1ZXMiLCJyZXNldCIsIlBvcHVwV2l0aEltYWdlIiwiX2ltYWdlIiwiUG9wdXBXaXRoQ29uZmlybWF0aW9uIiwiaGFuZGxlQ29uZmlybWF0aW9uIiwiX2NvbmZpcm1EZWxldGVCdXR0b24iLCJfaGFuZGxlQ29uZmlybWF0aW9uIiwicmVtb3ZpbmdDYXJkIiwiY2FyZElkIiwiX3JlbW92aW5nQ2FyZCIsIl9jYXJkSWQiLCJ0aGVuIiwiVXNlckluZm8iLCJwcm9maWxlTmFtZSIsIl9hYm91dCIsInByb2ZpbGVBYm91dCIsIl9hdmF0YXIiLCJwcm9maWxlQXZhdGFyIiwiYWJvdXQiLCJhdmF0YXIiLCJTZWN0aW9uIiwiY29udGFpbmVyIiwicmVuZGVyZXIiLCJfcmVuZGVyZXIiLCJfY29udGFpbmVyIiwiaXRlbSIsInByZXBlbmQiLCJpdGVtcyIsIkFwaSIsImNvbmZpZyIsIl9zZXJ2ZXJVcmwiLCJzZXJ2ZXJVcmwiLCJfaGVhZGVycyIsImhlYWRlcnMiLCJyZXMiLCJvayIsImpzb24iLCJQcm9taXNlIiwicmVqZWN0Iiwic3RhdHVzIiwiZmV0Y2giLCJtZXRob2QiLCJfY2hlY2tSZXNwb25zZSIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwicHJvZmlsZUVkaXRCdXR0b24iLCJwbGFjZUFkZEJ1dHRvbiIsInBsYWNlc0xpc3QiLCJuYW1lSW5wdXQiLCJhYm91dElucHV0IiwiYXZhdGFyQ2hhbmdlQnV0dG9uIiwiZm9ybVZhbGlkYXRvcnMiLCJmb3JtU2VsZWN0b3IiLCJjbG9zZUJ1dHRvbiIsImZvcm1FbGVtZW50IiwidmFsaWRhdG9yIiwiZm9ybU5hbWUiLCJnZXRBdHRyaWJ1dGUiLCJlbmFibGVWYWxpZGF0aW9uIiwiYXBpIiwiYXV0aG9yaXphdGlvbiIsInVzZXJEYXRhIiwiY3JlYXRlQ2FyZCIsImNhcmQiLCJnZXRJZCIsInBvcHVwUGxhY2VJbnNwZWN0b3IiLCJvcGVuIiwic2V0RXZlbnRMaXN0ZW5lcnMiLCJyZW1vdmVMaWtlIiwiZGVsZXRlTGlrZSIsImNhdGNoIiwiZXJyIiwiY29uc29sZSIsImxvZyIsInNldExpa2UiLCJhZGRMaWtlIiwicG9wdXBEZWxldGVDYXJkQ29uZmlybWF0aW9uIiwiZ2VuZXJhdGVDYXJkIiwicGxhY2VzR3JpZCIsImNhcmRFbGVtZW50IiwiYWRkSXRlbSIsImFsbCIsImdldFByb2ZpbGVEYXRhIiwiZ2V0UGxhY2VDYXJkcyIsImNhcmRzIiwiZ2V0VXNlckRhdGEiLCJzZXRJZCIsInJlbmRlckl0ZW1zIiwicmV2ZXJzZSIsImRlbGV0ZVBsYWNlQ2FyZCIsInBvcHVwRWRpdFByb2ZpbGUiLCJlZGl0UHJvZmlsZSIsInNldFVzZXJJbmZvIiwiZmluYWxseSIsImN1cnJlbnRVc2VyRGF0YSIsImdldFVzZXJJbmZvIiwicmVzZXRWYWxpZGF0aW9uIiwicG9wdXBFZGl0QXZhdGFyIiwiZWRpdEF2YXRhciIsInNldFVzZXJBdmF0YXIiLCJwb3B1cFBsYWNlQWRkIiwiYWRkUGxhY2VDYXJkIl0sInNvdXJjZVJvb3QiOiIifQ==