(()=>{"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e,n,r,o,i,c){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=e.name,this._link=e.link,this._id=e._id,this._api=i,this._ownerId=e.owner._id,this._currentUserId=c,this._cardSelector=n,this._handlePlaceClick=r,this._handlePlaceDeleteClick=o,this._likeCounter=e.likes.length,this._likeIsActive=e.likes.some((function(t){if(0!==e.likes.length&&c===t._id)return!0}))}var n,r;return n=t,(r=[{key:"_toggleLike",value:function(){this._likeButton.classList.toggle("place__like-button_active")}},{key:"_removeCard",value:function(){this._element.remove()}},{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".place").cloneNode(!0)}},{key:"_setEventListeners",value:function(){var e=this;this._likeButton=this._element.querySelector(".place__like-button"),this._deleteButton=this._element.querySelector(".place__delete-button"),this._photo=this._element.querySelector(".place__photo"),this._photo.addEventListener("click",(function(){e._handlePlaceClick(e._name,e._link)})),this._likeButton.addEventListener("click",(function(){e._likeIsActive?(e._likeCounter--,e._likeButton.textContent=e._likeCounter,e._api.removeLike(e._id).then((function(){e._toggleLike(),e._likeIsActive=!1})).catch((function(e){console.log(e)}))):(e._likeCounter++,e._likeButton.textContent=e._likeCounter,e._api.setLike(e._id).then((function(){e._toggleLike(),e._likeIsActive=!0})).catch((function(e){console.log(e)})))})),this._deleteButton.addEventListener("click",(function(){e._handlePlaceDeleteClick(e._element,e._id)}))}},{key:"generateCard",value:function(){this._element=this._getTemplate(),this._setEventListeners();var e=this._element.querySelector(".place__name"),t=this._photo;return this._element.id=this._id,e.textContent=this._name,e.alt=this._name,t.src=this._link,this._likeButton.textContent=this._likeCounter,this._likeIsActive&&this._likeButton.classList.add("place__like-button_active"),this._ownerId===this._currentUserId&&this._deleteButton.classList.add("place__delete-button_visible"),this._element}}])&&e(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var o=function(){function e(t,n){var o=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),r(this,"_showInputError",(function(e,t){var n=o._form.querySelector(".".concat(e.id,"-error"));e.classList.add(o._settings.inputErrorClass),n.textContent=t,n.classList.add(o._settings.errorClass)})),r(this,"_hideInputError",(function(e){var t=o._form.querySelector(".".concat(e.id,"-error"));e.classList.remove(o._settings.inputErrorClass),t.classList.remove(o._settings.errorClass),t.textContent=""})),r(this,"_checkInputValidity",(function(e){e.validity.valid?o._hideInputError(e):o._showInputError(e,e.validationMessage)})),r(this,"_hasInvalidInput",(function(){return o._inputList.some((function(e){return!e.validity.valid}))})),r(this,"_toggleButtonState",(function(){o._hasInvalidInput(o._inputList)?(o._buttonElement.classList.add(o._settings.inactiveButtonClass),o._buttonElement.setAttribute("disabled",!0)):(o._buttonElement.classList.remove(o._settings.inactiveButtonClass),o._buttonElement.removeAttribute("disabled"))})),r(this,"_setEventListeners",(function(){o._inputList.forEach((function(e){e.addEventListener("input",(function(){o._checkInputValidity(e),o._toggleButtonState(o._inputList,o._buttonElement)}))}))})),r(this,"enableValidation",(function(){o._setEventListeners()})),this._settings=t,this._form=n,this._inputList=Array.from(this._form.querySelectorAll(this._settings.inputSelector)),this._buttonElement=this._form.querySelector(this._settings.submitButtonSelector)}var t,o;return t=e,(o=[{key:"resetValidation",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){e._hideInputError(t)}))}}])&&n(t.prototype,o),Object.defineProperty(t,"prototype",{writable:!1}),e}();function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var c=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this),this._handleClickOutsideClose=this._handleClickOutsideClose.bind(this),this._submitButton=this._popup.querySelector(".popup__button")}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("popup_active"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_active"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"renderLoading",value:function(e,t){this._submitButton.textContent=t}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"_handleClickOutsideClose",value:function(e){e.target.classList.contains("popup_active")&&this.close(),e.target.classList.contains("popup__close-button")&&this.close()}},{key:"setEventListeners",value:function(){this._popup.addEventListener("mousedown",this._handleClickOutsideClose)}}])&&i(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function a(e){return a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},a(e)}function u(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function s(){return s="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=l(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},s.apply(this,arguments)}function l(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=h(e)););return e}function f(e,t){return f=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},f(e,t)}function p(e,t){if(t&&("object"===a(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function h(e){return h=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},h(e)}var _=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&f(e,t)}(c,e);var t,n,r,o,i=(r=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=h(r);if(o){var n=h(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return p(this,e)});function c(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(n=i.call(this,e))._handleFormSubmit=t,n._inputList=n._popup.querySelectorAll(".popup__input"),n}return t=c,(n=[{key:"getInputValues",value:function(){var e=this;return this._formValues={},this._inputList.forEach((function(t){e._formValues[t.name]=t.value})),this._formValues}},{key:"setEventListeners",value:function(){var e=this;s(h(c.prototype),"setEventListeners",this).call(this),this._form=this._popup.querySelector(".popup__form"),this._form.addEventListener("submit",(function(t){t.preventDefault(),e.renderLoading(!0,"Сохранение..."),e._handleFormSubmit(e.getInputValues())}))}},{key:"close",value:function(){s(h(c.prototype),"close",this).call(this),this._form.reset()}}])&&u(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),c}(c);function d(e){return d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},d(e)}function y(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function v(){return v="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=b(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},v.apply(this,arguments)}function b(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=k(e)););return e}function m(e,t){return m=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},m(e,t)}function g(e,t){if(t&&("object"===d(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function k(e){return k=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},k(e)}var w=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&m(e,t)}(c,e);var t,n,r,o,i=(r=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=k(r);if(o){var n=k(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return g(this,e)});function c(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(t=i.call(this,e))._image=t._popup.querySelector(".place-inspector__image"),t._name=t._popup.querySelector(".place-inspector__name"),t}return t=c,(n=[{key:"open",value:function(e,t){v(k(c.prototype),"open",this).call(this),this._image.alt=e,this._image.src=t,this._name.textContent=e}}])&&y(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),c}(c);function O(e){return O="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},O(e)}function E(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function C(){return C="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=P(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},C.apply(this,arguments)}function P(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=j(e)););return e}function S(e,t){return S=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},S(e,t)}function L(e,t){if(t&&("object"===O(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function j(e){return j=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},j(e)}var I=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&S(e,t)}(c,e);var t,n,r,o,i=(r=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=j(r);if(o){var n=j(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return L(this,e)});function c(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(n=i.call(this,e))._confirmDeleteButton=n._popup.querySelector(".popup__delete-place-button"),n._handleConfirmation=t,n}return t=c,(n=[{key:"open",value:function(e,t){C(j(c.prototype),"open",this).call(this),this._removingCard=e,this._cardId=t}},{key:"setEventListeners",value:function(){var e=this;C(j(c.prototype),"setEventListeners",this).call(this),this._confirmDeleteButton.addEventListener("click",(function(t){t.preventDefault(),e._handleConfirmation(e._removingCard,e._cardId),e.close()}))}}])&&E(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),c}(c);function R(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var B=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=t.profileName,this._about=t.profileAbout,this._avatar=t.profileAvatar}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._name.textContent,about:this._about.textContent,avatar:this._avatar.src}}},{key:"getId",value:function(){return this._id}},{key:"setId",value:function(e){this._id=e}},{key:"setUserInfo",value:function(e){this._name.textContent=e["name-input"],this._about.textContent=e["about-input"]}},{key:"setUserAvatar",value:function(e){this._avatar.src=e["new-avatar-link-input"]}}])&&R(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function q(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var T=function(){function e(t,n){var r=t.data,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderedItems=r,this._renderer=o,this._container=n}var t,n;return t=e,(n=[{key:"addItem",value:function(e){this._container.prepend(e)}},{key:"renderItems",value:function(){var e=this;this._renderedItems.forEach((function(t){e._renderer(t)}))}}])&&q(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function A(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var x,U=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._serverUrl=t.serverUrl,this._headers=t.headers}var t,n;return t=e,(n=[{key:"_checkResponse",value:function(e){return e.ok?e.json():Promise.reject("Ошибка загрузки данных: ".concat(e.status))}},{key:"getPlaceCards",value:function(){return fetch("".concat(this._serverUrl,"/cards"),{method:"GET",headers:this._headers}).then(this._checkResponse)}},{key:"getProfileData",value:function(){return fetch("".concat(this._serverUrl,"/users/me"),{method:"GET",headers:this._headers}).then(this._checkResponse)}},{key:"editProfile",value:function(e){return fetch("".concat(this._serverUrl,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e["name-input"],about:e["about-input"]})}).then(this._checkResponse)}},{key:"editAvatar",value:function(e){return fetch("".concat(this._serverUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e["new-avatar-link-input"]})}).then(this._checkResponse)}},{key:"addPlaceCard",value:function(e){return fetch("".concat(this._serverUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:e["place-name-input"],link:e["place-link-input"]})}).then(this._checkResponse)}},{key:"deletePlaceCard",value:function(e){return fetch("".concat(this._serverUrl,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then(this._checkResponse)}},{key:"setLike",value:function(e){return fetch("".concat(this._serverUrl,"/cards/").concat(e,"/likes"),{method:"PUT",headers:this._headers}).then(this._checkResponse)}},{key:"removeLike",value:function(e){return fetch("".concat(this._serverUrl,"/cards/").concat(e,"/likes"),{method:"DELETE",headers:this._headers}).then(this._checkResponse)}}])&&A(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),D=document.querySelector(".profile__name"),V=document.querySelector(".profile__description"),N=document.querySelector(".profile__edit-button"),J=document.querySelector(".profile__place-add-button"),F=document.querySelector(".places__list"),G=document.querySelector(".popup__input_profile_name"),H=document.querySelector(".popup__input_profile_about"),z=document.querySelector(".profile__avatar-button"),M=document.querySelector(".profile__avatar"),K={};x={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__input-error_visible",closeButton:".popup__close-button"},Array.from(document.querySelectorAll(x.formSelector)).forEach((function(e){var t=new o(x,e),n=e.getAttribute("name");K[n]=t,t.enableValidation()}));var Q=new U({serverUrl:"https://mesto.nomoreparties.co/v1/cohort-46",headers:{authorization:"d50d179a-e68e-48cd-9f64-645c0bfe8409","Content-Type":"application/json"}}),W=new B({profileName:D,profileAbout:V,profileAvatar:M});function X(e){return new t(e,".place-template",$,te,Q,W.getId()).generateCard()}Q.getProfileData().then((function(e){D.textContent=e.name,V.textContent=e.about,M.src=e.avatar,W.setId(e._id)})).catch((function(e){console.log(e)}));var Y=null;Q.getPlaceCards().then((function(e){(Y=new T({data:e.reverse(),renderer:function(e){var t=X(e);Y.addItem(t)}},F)).renderItems()})).catch((function(e){console.log(e)}));var Z=new w(".popup_place-inspector");function $(e,t){Z.open(e,t)}Z.setEventListeners();var ee=new I(".popup_type_delete-place-card",(function(e,t){Q.deletePlaceCard(t).then((function(){})).then((function(){return e.remove()})).then((function(){ee.close()})).catch((function(e){console.log(e)}))}));function te(e,t){ee.open(e,t)}ee.setEventListeners();var ne=new _(".popup_type_profile-edit",(function(){var e=ne.getInputValues();Q.editProfile(e).then((function(){W.setUserInfo(e),ne.close()})).catch((function(e){console.log(e)})).finally((function(){ne.renderLoading(!1,"Сохранить")}))}));ne.setEventListeners(),N.addEventListener("click",(function(){ne.open();var e=W.getUserInfo();G.value=e.name,H.value=e.about,K["profile-form"].resetValidation()}));var re=new _(".popup_type_change-avatar",(function(){var e=re.getInputValues();Q.editAvatar(e).then((function(){W.setUserAvatar(e)})).then((function(){re.close()})).catch((function(e){console.log(e)})).finally((function(){re.renderLoading(!1,"Сохранить")}))}));re.setEventListeners(),z.addEventListener("click",(function(){re.open(),K["change-avatar-form"].resetValidation()}));var oe=new _(".popup_type_place-add",(function(){var e=oe.getInputValues();Q.addPlaceCard(e).then((function(e){var t=X(e);Y.addItem(t)})).then((function(){oe.close()})).catch((function(e){console.log(e)})).finally((function(){oe.renderLoading(!1,"Создать")}))}));oe.setEventListeners(),J.addEventListener("click",(function(){oe.open(),K["place-add-form"].resetValidation()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,